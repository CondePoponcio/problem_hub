[
{"titulo": "Armchairs", "categoria": ["dp", "flows", "graph matchings", "greedy"], "dificultad": "1800", "enunciado": "There are n armchairs, numbered from 1 to n from left to right. Some armchairs are occupied by people (at most one person per armchair), others are not. The number of occupied armchairs is not greater than \\frac{n}{2}.For some reason, you would like to tell people to move from their armchairs to some other ones. If the i-th armchair is occupied by someone and the j-th armchair is not, you can tell the person sitting in the i-th armchair to move to the j-th armchair. The time it takes a person to move from the i-th armchair to the j-th one is |i - j| minutes. You may perform this operation any number of times, but these operations must be done sequentially, i.\u2009e. you cannot tell a person to move until the person you asked to move in the last operation has finished moving to their destination armchair.You want to achieve the following situation: every seat that was initially occupied must be free. What is the minimum time you need to do it?", "pruebas": {"caso 1": ["\n7\n1 0 0 1 0 0 1\n", "Returns: \n3\n"], "caso 2": ["\n6\n1 1 1 0 0 0\n", "Returns: \n9\n"], "caso 3": ["\n5\n0 0 0 0 0\n", "Returns: \n0\n"]}, "url": "https://codeforces.com//problemset/problem/1525/D"},
{"titulo": "BoboniuChatswithDu", "categoria": ["dp", "greedy", "sortings", "two pointers"], "dificultad": "1800", "enunciado": "Have you ever used the chat application QQ? Well, in a chat group of QQ, administrators can muzzle a user for days.In Boboniu's chat group, there's a person called Du Yi who likes to make fun of Boboniu every day.Du will chat in the group for n days. On the i-th day: If Du can speak, he'll make fun of Boboniu with fun factor a_i. But after that, he may be muzzled depending on Boboniu's mood.  Otherwise, Du won't do anything. Boboniu's mood is a constant m. On the i-th day: If Du can speak and a_i>m, then Boboniu will be angry and muzzle him for d days, which means that Du won't be able to speak on the i+1, i+2, \\cdots, \\min(i+d,n)-th days.  Otherwise, Boboniu won't do anything. The total fun factor is the sum of the fun factors on the days when Du can speak.Du asked you to find the maximum total fun factor among all possible permutations of a.", "pruebas": {"caso 1": ["\n5 2 11\n8 10 15 23 5\n", "Returns: \n48\n"], "caso 2": ["\n20 2 16\n20 5 8 2 18 16 2 16 16 1 5 16 2 13 6 16 4 17 21 7\n", "Returns: \n195\n"]}, "url": "https://codeforces.com//problemset/problem/1394/A"},
{"titulo": "StonedGame", "categoria": ["brute force", "constructive algorithms", "games", "greedy"], "dificultad": "1800", "enunciado": "T is playing a game with his friend, HL.There are n piles of stones, the i-th pile initially has a_i stones. T and HL will take alternating turns, with T going first. In each turn, a player chooses a non-empty pile and then removes a single stone from it. However, one cannot choose a pile that has been chosen in the previous turn (the pile that was chosen by the other player, or if the current turn is the first turn then the player can choose any non-empty pile). The player who cannot choose a pile in his turn loses, and the game ends.Assuming both players play optimally, given the starting configuration of t games, determine the winner of each game.", "pruebas": {"caso 1": ["\n2\n1\n2\n2\n1 1\n", "Returns: \nT\nHL\n"]}, "url": "https://codeforces.com//problemset/problem/1396/B"},
{"titulo": "ColoredRectangles", "categoria": ["dp", "greedy", "sortings"], "dificultad": "1800", "enunciado": "You are given three multisets of pairs of colored sticks:  R pairs of red sticks, the first pair has length r_1, the second pair has length r_2, \\dots, the R-th pair has length r_R;  G pairs of green sticks, the first pair has length g_1, the second pair has length g_2, \\dots, the G-th pair has length g_G;  B pairs of blue sticks, the first pair has length b_1, the second pair has length b_2, \\dots, the B-th pair has length b_B; You are constructing rectangles from these pairs of sticks with the following process:  take a pair of sticks of one color;  take a pair of sticks of another color different from the first one;  add the area of the resulting rectangle to the total area. Thus, you get such rectangles that their opposite sides are the same color and their adjacent sides are not the same color.Each pair of sticks can be used at most once, some pairs can be left unused. You are not allowed to split a pair into independent sticks.What is the maximum area you can achieve?", "pruebas": {"caso 1": ["\n1 1 1\n3\n5\n4\n", "Returns: \n20\n"], "caso 2": ["\n2 1 3\n9 5\n1\n2 8 5\n", "Returns: \n99\n"], "caso 3": ["\n10 1 1\n11 7 20 15 19 14 2 4 13 14\n8\n11\n", "Returns: \n372\n"]}, "url": "https://codeforces.com//problemset/problem/1398/D"},
{"titulo": "MaximumDistributedTree", "categoria": ["dfs and similar", "dp", "greedy", "implementation", "math", "number theory", "sortings", "trees"], "dificultad": "1800", "enunciado": "You are given a tree that consists of n nodes. You should label each of its n-1 edges with an integer in such way that satisfies the following conditions:  each integer must be greater than 0;  the product of all n-1 numbers should be equal to k;  the number of 1-s among all n-1 integers must be minimum possible. Let's define f(u,v) as the sum of the numbers on the simple path from node u to node v. Also, let \\sum\\limits_{i=1}^{n-1} \\sum\\limits_{j=i+1}^n f(i,j) be a distribution index of the tree.Find the maximum possible distribution index you can get. Since answer can be too large, print it modulo 10^9 + 7.In this problem, since the number k can be large, the result of the prime factorization of k is given instead.", "pruebas": {"caso 1": ["\n3\n4\n1 2\n2 3\n3 4\n2\n2 2\n4\n3 4\n1 3\n3 2\n2\n3 2\n7\n6 1\n2 3\n4 6\n7 3\n5 1\n3 6\n4\n7 5 13 3\n", "Returns: \n17\n18\n286\n"]}, "url": "https://codeforces.com//problemset/problem/1401/D"},
{"titulo": "Rock,Paper,Scissors", "categoria": ["brute force", "constructive algorithms", "flows", "greedy", "math"], "dificultad": "1800", "enunciado": "Alice and Bob have decided to play the game \"Rock, Paper, Scissors\". The game consists of several rounds, each round is independent of each other. In each round, both players show one of the following things at the same time: rock, paper or scissors. If both players showed the same things then the round outcome is a draw. Otherwise, the following rules applied: if one player showed rock and the other one showed scissors, then the player who showed rock is considered the winner and the other one is considered the loser;  if one player showed scissors and the other one showed paper, then the player who showed scissors is considered the winner and the other one is considered the loser;  if one player showed paper and the other one showed rock, then the player who showed paper is considered the winner and the other one is considered the loser. Alice and Bob decided to play exactly n rounds of the game described above. Alice decided to show rock a_1 times, show scissors a_2 times and show paper a_3 times. Bob decided to show rock b_1 times, show scissors b_2 times and show paper b_3 times. Though, both Alice and Bob did not choose the sequence in which they show things. It is guaranteed that a_1 + a_2 + a_3 = n and b_1 + b_2 + b_3 = n.Your task is to find two numbers: the minimum number of round Alice can win;  the maximum number of rounds Alice can win. ", "pruebas": {"caso 1": ["\n2\n0 1 1\n1 1 0\n", "Returns: \n0 1\n"], "caso 2": ["\n15\n5 5 5\n5 5 5\n", "Returns: \n0 15\n"], "caso 3": ["\n3\n0 0 3\n3 0 0\n", "Returns: \n3 3\n"], "caso 4": ["\n686\n479 178 29\n11 145 530\n", "Returns: \n22 334\n"], "caso 5": ["\n319\n10 53 256\n182 103 34\n", "Returns: \n119 226\n"]}, "url": "https://codeforces.com//problemset/problem/1426/E"},
{"titulo": "ChefMonocarp", "categoria": ["dp", "flows", "graph matchings", "greedy", "math", "sortings"], "dificultad": "1800", "enunciado": "Chef Monocarp has just put n dishes into an oven. He knows that the i-th dish has its optimal cooking time equal to t_i minutes.At any positive integer minute T Monocarp can put no more than one dish out of the oven. If the i-th dish is put out at some minute T, then its unpleasant value is |T - t_i|\u00a0\u2014 the absolute difference between T and t_i. Once the dish is out of the oven, it can't go back in.Monocarp should put all the dishes out of the oven. What is the minimum total unpleasant value Monocarp can obtain?", "pruebas": {"caso 1": ["\n6\n6\n4 2 4 4 5 2\n7\n7 7 7 7 7 7 7\n1\n1\n5\n5 1 2 4 3\n4\n1 4 4 4\n21\n21 8 1 4 1 5 21 1 8 21 11 21 11 3 12 8 19 15 9 11 13\n", "Returns: \n4\n12\n0\n0\n2\n21\n"]}, "url": "https://codeforces.com//problemset/problem/1437/C"},
{"titulo": "ExtremeSubtraction", "categoria": ["constructive algorithms", "dp", "greedy"], "dificultad": "1800", "enunciado": "You are given an array a of n positive integers.You can use the following operation as many times as you like: select any integer 1 \\le k \\le n and do one of two things:  decrement by one k of the first elements of the array.  decrement by one k of the last elements of the array. For example, if n=5 and a=[3,2,2,1,4], then you can apply one of the following operations to it (not all possible options are listed below):  decrement from the first two elements of the array. After this operation a=[2, 1, 2, 1, 4];  decrement from the last three elements of the array. After this operation a=[3, 2, 1, 0, 3];  decrement from the first five elements of the array. After this operation a=[2, 1, 1, 0, 3]; Determine if it is possible to make all the elements of the array equal to zero by applying a certain number of operations.", "pruebas": {"caso 1": ["\n4\n3\n1 2 1\n5\n11 7 9 6 8\n5\n1 3 1 3 1\n4\n5 2 1 10\n", "Returns: \nYES\nYES\nNO\nYES\n"]}, "url": "https://codeforces.com//problemset/problem/1442/A"},
{"titulo": "IdentifytheOperations", "categoria": ["combinatorics", "data structures", "dsu", "greedy", "implementation"], "dificultad": "1800", "enunciado": "We start with a permutation a_1, a_2, \\ldots, a_n and with an empty array b. We apply the following operation k times.On the i-th iteration, we select an index t_i (1 \\le t_i \\le n-i+1), remove a_{t_i} from the array, and append one of the numbers a_{t_i-1} or a_{t_i+1} (if t_i-1 or t_i+1 are within the array bounds) to the right end of the array b. Then we move elements a_{t_i+1}, \\ldots, a_n to the left in order to fill in the empty space.You are given the initial permutation a_1, a_2, \\ldots, a_n and the resulting array b_1, b_2, \\ldots, b_k. All elements of an array b are distinct. Calculate the number of possible sequences of indices t_1, t_2, \\ldots, t_k modulo 998\\,244\\,353.", "pruebas": {"caso 1": ["\n3\n5 3\n1 2 3 4 5\n3 2 5\n4 3\n4 3 2 1\n4 3 1\n7 4\n1 4 7 3 6 2 5\n3 2 4 5\n", "Returns: \n2\n0\n4\n"]}, "url": "https://codeforces.com//problemset/problem/1442/B"},
{"titulo": "RatingCompression", "categoria": ["binary search", "data structures", "greedy", "implementation", "two pointers"], "dificultad": "1800", "enunciado": "On the competitive programming platform CodeCook, every person has a rating graph described by an array of integers a of length n. You are now updating the infrastructure, so you've created a program to compress these graphs.The program works as follows. Given an integer parameter k, the program takes the minimum of each contiguous subarray of length k in a.More formally, for an array a of length n and an integer k, define the k-compression array of a as an array b of length n-k+1, such that b_j =\\min_{j\\le i\\le j+k-1}a_iFor example, the 3-compression array of [1, 3, 4, 5, 2] is [\\min\\{1, 3, 4\\}, \\min\\{3, 4, 5\\}, \\min\\{4, 5, 2\\}]=[1, 3, 2].A permutation of length m is an array consisting of m distinct integers from 1 to m in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (m=3 but there is 4 in the array).A k-compression array will make CodeCook users happy if it will be a permutation. Given an array a, determine for all 1\\leq k\\leq n if CodeCook users will be happy after a k-compression of this array or not.", "pruebas": {"caso 1": ["\n5\n5\n1 5 3 4 2\n4\n1 3 2 1\n5\n1 3 3 3 2\n10\n1 2 3 4 5 6 7 8 9 10\n3\n3 3 2\n", "Returns: \n10111\n0001\n00111\n1111111111\n000\n"]}, "url": "https://codeforces.com//problemset/problem/1450/D"},
{"titulo": "TheTreasureofTheSegments", "categoria": ["binary search", "data structures", "greedy"], "dificultad": "1800", "enunciado": "Polycarp found n segments on the street. A segment with the index i is described by two integers l_i and r_i\u00a0\u2014 coordinates of the beginning and end of the segment, respectively. Polycarp realized that he didn't need all the segments, so he wanted to delete some of them.Polycarp believes that a set of k segments is good if there is a segment [l_i, r_i] (1 \\leq i \\leq k) from the set, such that it intersects every segment from the set (the intersection must be a point or segment). For example, a set of 3 segments [[1, 4], [2, 3], [3, 6]] is good, since the segment [2, 3] intersects each segment from the set. Set of 4 segments [[1, 2], [2, 3], [3, 5], [4, 5]] is not good.Polycarp wonders, what is the minimum number of segments he has to delete so that the remaining segments form a good set?", "pruebas": {"caso 1": ["\n4\n3\n1 4\n2 3\n3 6\n4\n1 2\n2 3\n3 5\n4 5\n5\n1 2\n3 8\n4 5\n6 7\n9 10\n5\n1 5\n2 4\n3 5\n3 8\n4 8\n", "Returns: \n0\n1\n2\n0\n"]}, "url": "https://codeforces.com//problemset/problem/1462/F"},
{"titulo": "RoadReform", "categoria": ["dsu", "graphs", "greedy"], "dificultad": "1800", "enunciado": "There are n cities and m bidirectional roads in Berland. The i-th road connects the cities x_i and y_i, and has the speed limit s_i. The road network allows everyone to get from any city to any other city. The Berland Transport Ministry is planning a road reform.First of all, maintaining all m roads is too costly, so m - (n - 1) roads will be demolished in such a way that the remaining (n - 1) roads still allow to get to any city from any other city. Formally, the remaining roads should represent an undirected tree.Secondly, the speed limits on the remaining roads might be changed. The changes will be done sequentially, each change is either increasing the speed limit on some road by 1, or decreasing it by 1. Since changing the speed limit requires a lot of work, the Ministry wants to minimize the number of changes.The goal of the Ministry is to have a road network of (n - 1) roads with the maximum speed limit over all roads equal to exactly k. They assigned you the task of calculating the minimum number of speed limit changes they have to perform so the road network meets their requirements.For example, suppose the initial map of Berland looks like that, and k = 7:Then one of the optimal courses of action is to demolish the roads 1\u20134 and 3\u20134, and then decrease the speed limit on the road 2\u20133 by 1, so the resulting road network looks like that:", "pruebas": {"caso 1": ["\n4\n4 5 7\n4 1 3\n1 2 5\n2 3 8\n2 4 1\n3 4 4\n4 6 5\n1 2 1\n1 3 1\n1 4 2\n2 4 1\n4 3 1\n3 2 1\n3 2 10\n1 2 8\n1 3 10\n5 5 15\n1 2 17\n3 1 15\n2 3 10\n1 4 14\n2 5 8\n", "Returns: \n1\n3\n0\n0\n"]}, "url": "https://codeforces.com//problemset/problem/1468/J"},
{"titulo": "RBSDeletion", "categoria": ["*special problem", "greedy"], "dificultad": "1800", "enunciado": "A bracket sequence is a string containing only characters \"(\" and \")\". A regular bracket sequence (or, shortly, an RBS) is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example: bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");  bracket sequences \")(\", \"(\" and \")\" are not. You are given a string s, which is an RBS. You can apply any number of operations to this string. Each operation can have one of the following types: choose some non-empty prefix of s and remove it from s, so s is still an RBS. For example, we can apply this operation as follows: \"(())()(())()()\" \\to \"()()\" (the first 10 characters are removed);  choose some contiguous non-empty substring of s and remove it from s, so s is still an RBS. For example, we can apply this operation as follows: \"(())()(())()()\" \\to \"(())()()()\" (the characters from the 7-th to the 10-th are removed). The operation 2 can be applied at most k times. Calculate the maximum number of operations you can apply until s becomes empty.", "pruebas": {"caso 1": ["\n3\n12 2\n(()())((()))\n6 3\n()()()\n8 1\n(((())))\n", "Returns: \n4\n3\n2\n"]}, "url": "https://codeforces.com//problemset/problem/1488/B"},
{"titulo": "ZookeeperandTheInfiniteZoo", "categoria": ["bitmasks", "constructive algorithms", "dp", "greedy", "math"], "dificultad": "1800", "enunciado": "There is a new attraction in Singapore Zoo: The Infinite Zoo.The Infinite Zoo can be represented by a graph with an infinite number of vertices labeled 1,2,3,\\ldots. There is a directed edge from vertex u to vertex u+v if and only if u\\&v=v, where \\& denotes the . There are no other edges in the graph.Zookeeper has q queries. In the i-th query she will ask you if she can travel from vertex u_i to vertex v_i by going through directed edges.", "pruebas": {"caso 1": ["\n5\n1 4\n3 6\n1 6\n6 2\n5 5\n", "Returns: \nYES\nYES\nNO\nNO\nYES\n"]}, "url": "https://codeforces.com//problemset/problem/1491/D"},
{"titulo": "Cakewalk", "categoria": ["*special problem", "greedy", "implementation", "shortest paths"], "dificultad": "1800", "enunciado": "A mouse encountered a nice big cake and decided to take a walk across it, eating the berries on top of the cake on its way. The cake is rectangular, neatly divided into squares; some of the squares have a berry in them, and some don't.The mouse is in a bit of a hurry, though, so once she enters the cake from its northwest corner (the top left cell in the input data), she will only go east (right) or south (down), until she reaches the southeast corner (the bottom right cell). She will eat every berry in the squares she passes through, but not in the other squares.The mouse tries to choose her path so as to maximize the number of berries consumed. However, her haste and hunger might be clouding her judgement, leading her to suboptimal decisions...", "pruebas": {"caso 1": ["\n4 3\n*..\n.*.\n..*\n...\n", "Returns: \n3\n"], "caso 2": ["\n4 4\n.*..\n*...\n...*\n..*.\n", "Returns: \n2\n"], "caso 3": ["\n3 4\n..**\n*...\n....\n", "Returns: \n1\n"], "caso 4": ["\n5 5\n..*..\n.....\n**...\n**...\n**...\n", "Returns: \n1\n"]}, "url": "https://codeforces.com//problemset/problem/1505/E"},
{"titulo": "TheSportsFestival", "categoria": ["dp", "greedy"], "dificultad": "1800", "enunciado": "The student council is preparing for the relay race at the sports festival.The council consists of n members. They will run one after the other in the race, the speed of member i is s_i. The discrepancy d_i of the i-th stage is the difference between the maximum and the minimum running speed among the first i members who ran. Formally, if a_i denotes the speed of the i-th member who participated in the race, then d_i = \\max(a_1, a_2, \\dots, a_i) - \\min(a_1, a_2, \\dots, a_i).You want to minimize the sum of the discrepancies d_1 + d_2 + \\dots + d_n. To do this, you are allowed to change the order in which the members run. What is the minimum possible sum that can be achieved?", "pruebas": {"caso 1": ["\n3\n3 1 2\n", "Returns: \n3\n"], "caso 2": ["\n1\n5\n", "Returns: \n0\n"], "caso 3": ["\n6\n1 6 3 3 6 3\n", "Returns: \n11\n"], "caso 4": ["\n6\n104 943872923 6589 889921234 1000000000 69\n", "Returns: \n2833800505\n"]}, "url": "https://codeforces.com//problemset/problem/1509/C"},
{"titulo": "Queue", "categoria": ["constructive algorithms", "greedy", "sortings"], "dificultad": "1800", "enunciado": "In the Main Berland Bank  people stand in a queue at the cashier, everyone knows his/her height , and the heights of the other people in the queue. Each of them keeps in mind number  \u2014 how many people who are taller than him/her and stand in queue in front of him.After a while the cashier has a lunch break and the people in the queue seat on the chairs in the waiting room in a random order.When the lunch break was over, it turned out that nobody can remember the exact order of the people in the queue, but everyone remembers his number .Your task is to restore the order in which the people stood in the queue if it is possible. There may be several acceptable orders, but you need to find any of them. Also, you need to print a possible set of numbers  \u2014 the heights of people in the queue, so that the numbers  are correct.", "pruebas": {"caso 1": ["4", "a 0", "b 2", "c 0", "d 0", "Returns: a 150"], "caso 2": ["c 170", "d 180", "b 160", "4", "vasya 0", "petya 1", "manya 3", "dunay 3", "Returns: -1"]}, "url": "https://codeforces.com//problemset/problem/141/C"},
{"titulo": "HelpGeneral", "categoria": ["constructive algorithms", "greedy", "implementation"], "dificultad": "1800", "enunciado": "Once upon a time in the Kingdom of Far Far Away lived Sir Lancelot, the chief Royal General. He was very proud of his men and he liked to invite the King to come and watch drill exercises which demonstrated the fighting techniques and tactics of the squad he was in charge of. But time went by and one day Sir Lancelot had a major argument with the Fairy Godmother (there were rumors that the argument occurred after the general spoke badly of the Godmother's flying techniques. That seemed to hurt the Fairy Godmother very deeply). As the result of the argument, the Godmother put a rather strange curse upon the general. It sounded all complicated and quite harmless: \"If the squared distance between some two soldiers equals to 5, then those soldiers will conflict with each other!\"The drill exercises are held on a rectangular \u2009\u00d7\u2009 field, split into  square 1\u2009\u00d7\u20091 segments for each soldier. Thus, the square of the distance between the soldiers that stand on squares (,\u2009) and (,\u2009) equals exactly (\u2009-\u2009)\u2009+\u2009(\u2009-\u2009). Now not all  squad soldiers can participate in the drill exercises as it was before the Fairy Godmother's curse. Unless, of course, the general wants the soldiers to fight with each other or even worse... For example, if he puts a soldier in the square (2,\u20092), then he cannot put soldiers in the squares (1,\u20094), (3,\u20094), (4,\u20091) and (4,\u20093) \u2014 each of them will conflict with the soldier in the square (2,\u20092).Your task is to help the general. You are given the size of the drill exercise field. You are asked to calculate the maximum number of soldiers that can be simultaneously positioned on this field, so that no two soldiers fall under the Fairy Godmother's curse.", "pruebas": {"caso 1": ["2 4", "Returns: 4"], "caso 2": ["3 4", "Returns: 6"]}, "url": "https://codeforces.com//problemset/problem/142/B"},
{"titulo": "RangeIncrements", "categoria": ["data structures", "greedy"], "dificultad": "1800", "enunciado": "Polycarpus is an amateur programmer. Now he is analyzing a friend's program. He has already found there the function rangeIncrement(l, r), that adds 1 to each element of some array  for all indexes in the segment [,\u2009]. In other words, this function does the following: Polycarpus knows the state of the array  after a series of function calls. He wants to determine the minimum number of function calls that lead to such state. In addition, he wants to find what function calls are needed in this case. It is guaranteed that the required number of calls does not exceed 10.Before calls of function rangeIncrement(l, r) all array elements equal zero.", "pruebas": {"caso 1": ["function rangeIncrement(l, r)", "    for i := l .. r do", "        a[i] = a[i] + 1", "6", "1 2 1 1 4 1", "Returns: 5"], "caso 2": ["2 2", "5 5", "5 5", "5 5", "1 6", "5", "1 0 1 0 1", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/174/C"},
{"titulo": "Beaver'sCalculator1.0", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "The Smart Beaver from ABBYY has once again surprised us! He has developed a new calculating device, which he called the \"Beaver's Calculator 1.0\". It is very peculiar and it is planned to be used in a variety of scientific problems.To test it, the Smart Beaver invited  scientists, numbered from 1 to . The -th scientist brought  calculating problems for the device developed by the Smart Beaver from ABBYY. The problems of the -th scientist are numbered from 1 to , and they must be calculated sequentially in the described order, since calculating each problem heavily depends on the results of calculating of the previous ones.Each problem of each of the  scientists is described by one integer , where  (1\u2009\u2264\u2009\u2009\u2264\u2009) is the number of the scientist,  (1\u2009\u2264\u2009\u2009\u2264\u2009) is the number of the problem, and  is the number of resource units the calculating device needs to solve this problem.The calculating device that is developed by the Smart Beaver is pretty unusual. It solves problems sequentially, one after another. After some problem is solved and before the next one is considered, the calculating device allocates or frees resources.The most expensive operation for the calculating device is freeing resources, which works much slower than allocating them. It is therefore desirable that each next problem for the calculating device requires no less resources than the previous one.You are given the information about the problems the scientists offered for the testing. You need to arrange these problems in such an order that the number of adjacent \"bad\" pairs of problems in this list is minimum possible. We will call two consecutive problems in this list a \"bad pair\" if the problem that is performed first requires more resources than the one that goes after it. Do not forget that the problems of the same scientist must be solved in a fixed order.", "pruebas": {"caso 1": ["2", "2 1 1 1 10", "2 3 1 1 10", "Returns: 0"], "caso 2": ["1 1", "2 1", "3 2", "4 2", "2", "3 10 2 3 1000", "3 100 1 999 1000", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/207/A2"},
{"titulo": "HiringStaff", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "A new Berland businessman Vitaly is going to open a household appliances' store. All he's got to do now is to hire the staff.The store will work seven days a week, but not around the clock. Every day at least  people must work in the store.Berland has a law that determines the order of working days and non-working days. Namely, each employee must work for exactly  consecutive days, then rest for exactly  days, then work for  more days and rest for  more, and so on. Vitaly doesn't want to break the law. Fortunately, there is a loophole: the law comes into force on the day when the employee is hired. For example, if an employee is hired on day , then he should work on days [,\u2009\u2009+\u20091,\u2009...,\u2009\u2009+\u2009\u2009-\u20091], [\u2009+\u2009\u2009+\u2009,\u2009\u2009+\u2009\u2009+\u2009\u2009+\u20091,\u2009...,\u2009\u2009+\u2009\u2009+\u20092\u2009-\u20091], and so on. Day  can be chosen arbitrarily by Vitaly.There is one more thing: the key to the store. Berland law prohibits making copies of keys, so there is only one key. Vitaly is planning to entrust the key to the store employees. At the same time on each day the key must be with an employee who works that day \u2014 otherwise on this day no one can get inside the store. During the day the key holder can give the key to another employee, if he also works that day. The key will handed to the first hired employee at his first working day.Each employee has to be paid salary. Therefore, Vitaly wants to hire as few employees as possible provided that the store can operate normally on each day from 1 to infinity. In other words, on each day with index from 1 to infinity, the store must have at least  working employees, and one of the working employees should have the key to the store.Help Vitaly and determine the minimum required number of employees, as well as days on which they should be hired.", "pruebas": {"caso 1": ["4 3 2", "Returns: 4"], "caso 2": ["1 1 4 5", "3 3 1", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/216/C"},
{"titulo": "Anagram", "categoria": ["greedy", "strings"], "dificultad": "1800", "enunciado": "String  is an anagram of string , if we can rearrange the letters in string  and get exact string . For example, strings \"DOG\" and \"GOD\" are anagrams, so are strings \"BABA\" and \"AABB\", but strings \"ABBAC\" and \"CAABA\" are not.You are given two strings  and  of the same length, consisting of uppercase English letters. You need to get the anagram of string  from string . You are permitted to perform the replacing operation: every operation is replacing some character from the string  by any other character. Get the anagram of string  in the least number of replacing operations. If you can get multiple anagrams of string  in the least number of operations, get the lexicographically minimal one.The lexicographic order of strings is the familiar to us \"dictionary\" order. Formally, the string  of length  is lexicographically smaller than string  of the same length, if \u2009=\u2009, \u2009=\u2009, ..., \u2009=\u2009, \u2009<\u2009 for some  (1\u2009\u2264\u2009\u2009\u2264\u2009). Here characters in the strings are numbered from 1. The characters of the strings are compared in the alphabetic order.", "pruebas": {"caso 1": ["ABA", "CBA", "Returns: 1"], "caso 2": ["ABC", "CDBABC", "ADCABD", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/254/C"},
{"titulo": "ZeroTree", "categoria": ["dfs and similar", "dp", "greedy", "trees"], "dificultad": "1800", "enunciado": "A tree is a graph with  vertices and exactly \u2009-\u20091 edges; this graph should meet the following condition: there exists exactly one shortest (by number of edges) path between any pair of its vertices.A subtree of a tree  is a tree with both vertices and edges as subsets of vertices and edges of .You're given a tree with  vertices. Consider its vertices numbered with integers from 1 to . Additionally an integer is written on every vertex of this tree. Initially the integer written on the -th vertex is equal to . In one move you can apply the following operation: Select the subtree of the given tree that includes the vertex with number 1.  Increase (or decrease) by one all the integers which are written on the vertices of that subtree. Calculate the minimum number of moves that is required to make all the integers written on the vertices of the given tree equal to zero.", "pruebas": {"caso 1": ["3", "1 2", "1 3", "1 -1 1", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/274/B"},
{"titulo": "Chips", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "Gerald plays the following game. He has a checkered field of size \u2009\u00d7\u2009 cells, where  various cells are banned. Before the game, he has to put a few chips on some border (but not corner) board cells. Then for \u2009-\u20091 minutes, Gerald every minute moves each chip into an adjacent cell. He moves each chip from its original edge to the opposite edge. Gerald loses in this game in each of the three cases: At least one of the chips at least once fell to the banned cell.  At least once two chips were on the same cell.  At least once two chips swapped in a minute (for example, if you stand two chips on two opposite border cells of a row with even length, this situation happens in the middle of the row). In that case he loses and earns 0 points. When nothing like that happened, he wins and earns the number of points equal to the number of chips he managed to put on the board. Help Gerald earn the most points.", "pruebas": {"caso 1": ["3 1", "2 2", "Returns: 0"], "caso 2": ["3 0", "Returns: 1"], "caso 3": ["4 3", "3 1", "3 2", "3 3", "Returns: 1"]}, "url": "https://codeforces.com//problemset/problem/333/B"},
{"titulo": "VasilytheBearandSequence", "categoria": ["brute force", "greedy", "implementation", "number theory"], "dificultad": "1800", "enunciado": "Vasily the bear has got a sequence of positive integers ,\u2009,\u2009...,\u2009. Vasily the Bear wants to write out several numbers on a piece of paper so that the beauty of the numbers he wrote out was maximum. The beauty of the written out numbers ,\u2009,\u2009...,\u2009 is such maximum non-negative integer , that number     ...   is divisible by number 2 without a remainder. If such number  doesn't exist (that is, for any non-negative integer , number     ...   is divisible by 2 without a remainder), the beauty of the written out numbers equals -1. Tell the bear which numbers he should write out so that the beauty of the written out numbers is maximum. If there are multiple ways to write out the numbers, you need to choose the one where the bear writes out as many numbers as possible.Here expression    means applying the bitwise AND operation to numbers  and . In programming languages C++ and Java this operation is represented by \"&\", in Pascal \u2014 by \"and\".", "pruebas": {"caso 1": ["5", "1 2 3 4 5", "Returns: 2"], "caso 2": ["4 5", "3", "1 2 4", "Returns: 1"]}, "url": "https://codeforces.com//problemset/problem/336/C"},
{"titulo": "JeffandRounding", "categoria": ["dp", "greedy", "implementation", "math"], "dificultad": "1800", "enunciado": "Jeff got 2 real numbers ,\u2009,\u2009...,\u2009 as a birthday present. The boy hates non-integer numbers, so he decided to slightly \"adjust\" the numbers he's got. Namely, Jeff consecutively executes  operations, each of them goes as follows: choose indexes  and  (\u2009\u2260\u2009) that haven't been chosen yet;  round element  to the nearest integer that isn't more than  (assign to : \u230a \u00a0\u230b);  round element  to the nearest integer that isn't less than  (assign to : \u2308 \u00a0\u2309). Nevertheless, Jeff doesn't want to hurt the feelings of the person who gave him the sequence. That's why the boy wants to perform the operations so as to make the absolute value of the difference between the sum of elements before performing the operations and the sum of elements after performing the operations as small as possible. Help Jeff find the minimum absolute value of the difference.", "pruebas": {"caso 1": ["3", "0.000 0.500 0.750 1.000 2.000 3.000", "Returns: 0.250"], "caso 2": ["3", "4469.000 6526.000 4864.000 9356.383 7490.000 995.896", "Returns: 0.279"]}, "url": "https://codeforces.com//problemset/problem/351/A"},
{"titulo": "DimaandHares", "categoria": ["dp", "greedy"], "dificultad": "1800", "enunciado": "Dima liked the present he got from Inna very much. He liked the present he got from Seryozha even more. Dima felt so grateful to Inna about the present that he decided to buy her  hares. Inna was very happy. She lined up the hares in a row, numbered them from 1 to  from left to right and started feeding them with carrots. Inna was determined to feed each hare exactly once. But in what order should she feed them?Inna noticed that each hare radiates joy when she feeds it. And the joy of the specific hare depends on whether Inna fed its adjacent hares before feeding it. Inna knows how much joy a hare radiates if it eats when either both of his adjacent hares are hungry, or one of the adjacent hares is full (that is, has been fed), or both of the adjacent hares are full. Please note that hares number 1 and  don't have a left and a right-adjacent hare correspondingly, so they can never have two full adjacent hares.Help Inna maximize the total joy the hares radiate. :)", "pruebas": {"caso 1": ["4", "1 2 3 4", "4 3 2 1", "0 1 1 0", "Returns: 13"], "caso 2": ["7", "8 5 7 6 1 8 9", "2 7 9 5 4 3 1", "2 3 3 4 1 1 3", "Returns: 44"], "caso 3": ["3", "1 1 1", "1 2 1", "1 1 1", "Returns: 4"]}, "url": "https://codeforces.com//problemset/problem/358/D"},
{"titulo": "RentingBikes", "categoria": ["binary search", "greedy"], "dificultad": "1800", "enunciado": "A group of  schoolboys decided to ride bikes. As nobody of them has a bike, the boys need to rent them.The renting site offered them  bikes. The renting price is different for different bikes, renting the -th bike costs  rubles.In total, the boys' shared budget is  rubles. Besides, each of them has his own personal money, the -th boy has  personal rubles. The shared budget can be spent on any schoolchildren arbitrarily, but each boy's personal money can be spent on renting only this boy's bike.Each boy can rent at most one bike, one cannot give his bike to somebody else.What maximum number of schoolboys will be able to ride bikes? What minimum sum of personal money will they have to spend in total to let as many schoolchildren ride bikes as possible?", "pruebas": {"caso 1": ["2 2 10", "5 5", "7 6", "Returns: 2 3"], "caso 2": ["4 5 2", "8 1 1 2", "6 3 7 5 2", "Returns: 3 8"]}, "url": "https://codeforces.com//problemset/problem/363/D"},
{"titulo": "Mittens", "categoria": ["constructive algorithms", "greedy", "sortings"], "dificultad": "1800", "enunciado": "A Christmas party in city S. had  children. All children came in mittens. The mittens can be of different colors, but each child had the left and the right mitten of the same color. Let's say that the colors of the mittens are numbered with integers from 1 to , and the children are numbered from 1 to . Then the -th child has both mittens of color .The Party had Santa Claus ('Father Frost' in Russian), his granddaughter Snow Girl, the children danced around the richly decorated Christmas tree. In fact, everything was so bright and diverse that the children wanted to wear mittens of distinct colors. The children decided to swap the mittens so that each of them got one left and one right mitten in the end, and these two mittens were of distinct colors. All mittens are of the same size and fit all the children.The children started exchanging the mittens haphazardly, but they couldn't reach the situation when each child has a pair of mittens of distinct colors. Vasily Petrov, the dad of one of the children, noted that in the general case the children's idea may turn out impossible. Besides, he is a mathematician and he came up with such scheme of distributing mittens that the number of children that have distinct-colored mittens was maximum. You task is to repeat his discovery. Note that the left and right mittens are different: each child must end up with one left and one right mitten.", "pruebas": {"caso 1": ["6 3", "1 3 2 2 1 1", "Returns: 6"], "caso 2": ["2 1", "1 2", "2 1", "1 3", "1 2", "3 1", "4 2", "1 2 1 1", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/370/C"},
{"titulo": "UpgradingArray", "categoria": ["dp", "greedy", "math", "number theory"], "dificultad": "1800", "enunciado": "You have an array of positive integers [1],\u2009[2],\u2009...,\u2009[] and a set of bad prime numbers ,\u2009,\u2009...,\u2009. The prime numbers that do not occur in the set  are considered good. The beauty of array  is the sum , where function () is determined as follows: (1)\u2009=\u20090;  Let's assume that  is the minimum prime divisor of . If  is a good prime, then , otherwise . You are allowed to perform an arbitrary (probably zero) number of operations to improve array . The operation of improvement is the following sequence of actions: Choose some number  (1\u2009\u2264\u2009\u2009\u2264\u2009) and calculate the value  = GCD([1],\u2009[2],\u2009...,\u2009[]).  Apply the assignments: , , ..., . What is the maximum beauty of the array you can get? ", "pruebas": {"caso 1": ["5 2", "4 20 34 10 10", "2 5", "Returns: -2"], "caso 2": ["4 5", "2 4 8 16", "3 5 7 11 17", "Returns: 10"]}, "url": "https://codeforces.com//problemset/problem/402/D"},
{"titulo": "PrimeSwaps", "categoria": ["greedy", "sortings"], "dificultad": "1800", "enunciado": "You have an array [1],\u2009[2],\u2009...,\u2009[], containing distinct integers from 1 to . Your task is to sort this array in increasing order with the following operation (you may need to apply it multiple times): choose two indexes,  and  (1\u2009\u2264\u2009\u2009<\u2009\u2009\u2264\u2009; (\u2009-\u2009\u2009+\u20091) is a prime number);  swap the elements on positions  and ; in other words, you are allowed to apply the following sequence of assignments: \u2009=\u2009[],\u2009[]\u2009=\u2009[],\u2009[]\u2009=\u2009 ( is a temporary variable). You do not need to minimize the number of used operations. However, you need to make sure that there are at most 5 operations.", "pruebas": {"caso 1": ["3", "3 2 1", "Returns: 1"], "caso 2": ["1 3", "2", "1 2", "Returns: 0"], "caso 3": ["4", "4 2 3 1", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/432/C"},
{"titulo": "DungeonsandCandies", "categoria": ["dsu", "graphs", "greedy", "trees"], "dificultad": "1800", "enunciado": "During the loading of the game \"Dungeons and Candies\" you are required to get descriptions of  levels from the server. Each description is a map of an \u2009\u00d7\u2009 checkered rectangular field. Some cells of the field contain candies (each cell has at most one candy). An empty cell is denoted as \".\" on the map, but if a cell has a candy, it is denoted as a letter of the English alphabet. A level may contain identical candies, in this case the letters in the corresponding cells of the map will be the same.When you transmit information via a network, you want to minimize traffic \u2014 the total size of the transferred data. The levels can be transmitted in any order. There are two ways to transmit the current level : You can transmit the whole level . Then you need to transmit \u00b7 bytes via the network.  You can transmit the difference between level  and some previously transmitted level  (if it exists); this operation requires to transmit \u00b7 bytes, where  is the number of cells of the field that are different for  and , and  is a constant. Note, that you should compare only the corresponding cells of levels  and  to calculate . You cannot transform the maps of levels, i.e. rotate or shift them relatively to each other. Your task is to find a way to transfer all the  levels and minimize the traffic.", "pruebas": {"caso 1": ["2 3 3 2", "A.A", "...", "A.a", "..C", "X.Y", "...", "Returns: 14"], "caso 2": ["1 0", "2 1", "3 1", "1 1 4 1", "A", ".", "B", ".", "Returns: 3"], "caso 3": ["1 0", "2 0", "4 2", "3 0", "1 3 5 2", "ABA", "BBB", "BBA", "BAB", "ABB", "Returns: 11"]}, "url": "https://codeforces.com//problemset/problem/436/C"},
{"titulo": "\rWonderfulRandomizedSum", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "Learn, learn and learn again \u2014 Valera has to do this every day. He is studying at mathematical school, where math is the main discipline. The mathematics teacher loves her discipline very much and tries to cultivate this love in children. That's why she always gives her students large and difficult homework. Despite that Valera is one of the best students, he failed to manage with the new homework. That's why he asks for your help. He has the following task. A sequence of  numbers is given. A prefix of a sequence is the part of the sequence (possibly empty), taken from the start of the sequence. A suffix of a sequence is the part of the sequence (possibly empty), taken from the end of the sequence. It is allowed to sequentially make two operations with the sequence. The first operation is to take some prefix of the sequence and multiply all numbers in this prefix by \u2009-\u20091. The second operation is to take some suffix and multiply all numbers in it by \u2009-\u20091. The chosen prefix and suffix may intersect. What is the maximum total sum of the sequence that can be obtained by applying the described operations?", "pruebas": {"caso 1": ["3", "-1 -2 -3", "Returns: 6"], "caso 2": ["5", "-4 2 0 5 0", "Returns: 11"], "caso 3": ["5", "-1 10 -5 10 -2", "Returns: 18"]}, "url": "https://codeforces.com//problemset/problem/33/C"},
{"titulo": "\rComputerGame", "categoria": ["greedy", "implementation"], "dificultad": "1800", "enunciado": "Vasya\u2019s elder brother Petya loves playing computer games. In one of his favourite computer games Petya reached the final level where a fight with the boss take place.While playing the game Petya found spell scrolls and now he is about to use them. Let\u2019s describe the way fighting goes on this level:1) The boss has two parameters:  \u2014 the initial amount of health and  \u2014 regeneration rate per second.2) Every scroll also has two parameters:  \u2014 spell power measured in percents \u2014 the maximal amount of health counted off the initial one, which allows to use the scroll (i.e. if the boss has more than  percent of health the scroll cannot be used); and  the damage per second inflicted upon the boss if the scroll is used. As soon as a scroll is used it disappears and another spell is cast upon the boss that inflicts  of damage per second upon him until the end of the game.During the battle the actions per second are performed in the following order: first the boss gets the damage from all the spells cast upon him, then he regenerates  of health (at the same time he can\u2019t have more than  of health), then the player may use another scroll (no more than one per second).The boss is considered to be defeated if at the end of a second he has nonpositive (\u2009\u2264\u20090) amount of health.Help Petya to determine whether he can win with the set of scrolls available to him and if he can, determine the minimal number of seconds he needs to do it.", "pruebas": {"caso 1": ["2 10 3", "100 3", "99 1", "Returns: NO"], "caso 2": ["2 100 10", "100 11", "90 9", "Returns: YES"]}, "url": "https://codeforces.com//problemset/problem/37/B"},
{"titulo": "\rThreeBaseStations", "categoria": ["binary search", "greedy"], "dificultad": "1800", "enunciado": "The New Vasjuki village is stretched along the motorway and that's why every house on it is characterized by its shift relative to some fixed point \u2014 the  coordinate. The village consists of  houses, the -th house is located in the point with coordinates of .TELE3, a cellular communication provider planned to locate three base stations so as to provide every house in the village with cellular communication. The base station having power  located in the point  provides with communication all the houses on the segment [\u2009-\u2009,\u2009\u2009+\u2009] (including boundaries).To simplify the integration (and simply not to mix anything up) all the three stations are planned to possess the equal power of . Which minimal value of  is enough to provide all the houses in the village with cellular communication.", "pruebas": {"caso 1": ["4", "1 2 3 4", "Returns: 0.500000"], "caso 2": ["1.500000 2.500000 3.500000", "3", "10 20 30", "Returns: 0"], "caso 3": ["10.000000 20.000000 30.000000", "5", "10003 10004 10001 10002 1", "Returns: 0.500000"]}, "url": "https://codeforces.com//problemset/problem/51/C"},
{"titulo": "\rEternalVictory", "categoria": ["dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "dificultad": "1800", "enunciado": "Valerian was captured by Shapur. The victory was such a great one that Shapur decided to carve a scene of Valerian's defeat on a mountain. So he had to find the best place to make his victory eternal!He decided to visit all  cities of Persia to find the best available mountain, but after the recent war he was too tired and didn't want to traverse a lot. So he wanted to visit each of these  cities at least once with smallest possible traverse. Persian cities are connected with bidirectional roads. You can go from any city to any other one using these roads and there is a unique path between each two cities.All cities are numbered 1 to . Shapur is currently in the city 1 and he wants to visit all other cities with minimum possible traverse. He can finish his travels in any city.Help Shapur find how much He should travel.", "pruebas": {"caso 1": ["3", "1 2 3", "2 3 4", "Returns: 7"], "caso 2": ["3", "1 2 3", "1 3 3", "Returns: 9"]}, "url": "https://codeforces.com//problemset/problem/61/D"},
{"titulo": "\rPresents", "categoria": ["*special problem", "greedy"], "dificultad": "1800", "enunciado": "You are given the prices of three presents. Also there are three sisters. It is known that the most valuable present is for the eldest sister. The second (by price) is for the second sister. And the less valuable present is for the youngest sister. If two (or three) presents have the same price, corresponding sisters may get the in a random way.", "pruebas": {"caso 1": ["11 13 1", "Returns: 2 1 3 "], "caso 2": ["30 10 30", "Returns: 1 3 2 "]}, "url": "https://codeforces.com//problemset/problem/64/D"},
{"titulo": "\rPartialTeacher", "categoria": ["dp", "graphs", "greedy", "implementation"], "dificultad": "1800", "enunciado": "A teacher decides to give toffees to his students. He asks  students to stand in a queue. Since the teacher is very partial, he follows the following rule to distribute toffees.He looks at the first two students and gives more toffees to the student having higher marks than the other one. If they have the same marks they get the same number of toffees. The same procedure is followed for each pair of adjacent students starting from the first one to the last one.It is given that each student receives at least one toffee. You have to find the number of toffees given to each student by the teacher such that the total number of toffees is minimum.", "pruebas": {"caso 1": ["5", "LRLR", "Returns: 2 1 2 1 2"], "caso 2": ["5", "=RRR", "Returns: 1 1 2 3 4"]}, "url": "https://codeforces.com//problemset/problem/67/A"},
{"titulo": "\rRestorationofthePermutation", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "Let \u2009=\u2009{,\u2009,\u2009...,\u2009} be any permutation of the first  natural numbers {1,\u20092,\u2009...,\u2009}. You are given a positive integer  and another sequence \u2009=\u2009{,\u2009,\u2009...,\u2009}, where  is the number of elements  in  to the left of the element \u2009=\u2009 such that \u2009\u2265\u2009(\u2009+\u2009).For example, if \u2009=\u20095, a possible  is {5,\u20091,\u20094,\u20092,\u20093}. For \u2009=\u20092,  is given by {1,\u20092,\u20091,\u20090,\u20090}. But if \u2009=\u20093, then \u2009=\u2009{1,\u20091,\u20090,\u20090,\u20090}.For two sequences \u2009=\u2009{,\u2009,\u2009...,\u2009} and \u2009=\u2009{,\u2009,\u2009...,\u2009}, let -th elements be the first elements such that \u2009\u2260\u2009. If \u2009<\u2009, then  is lexicographically smaller than , while if \u2009>\u2009, then  is lexicographically greater than .Given ,  and , you need to determine the lexicographically smallest .", "pruebas": {"caso 1": ["5 2", "1 2 1 0 0", "Returns: 4 1 5 2 3 "], "caso 2": ["4 2", "1 0 0 0", "Returns: 2 3 1 4 "]}, "url": "https://codeforces.com//problemset/problem/67/B"},
{"titulo": "\rGoshtasp,VishtaspandEidi", "categoria": ["*special problem", "greedy", "math"], "dificultad": "1800", "enunciado": "Goshtasp was known to be a good programmer in his school. One day Vishtasp, Goshtasp's friend, asked him to solve this task:Given a positive integer , you should determine whether  is rich.The positive integer  is rich, if there exists some set of distinct numbers ,\u2009,\u2009...,\u2009 such that . In addition: every  should be either a prime number, or equal to 1.Vishtasp said that he would share his Eidi 50\u2009/\u200950 with Goshtasp, if he could solve the task. Eidi is money given to children for Noruz by their parents and/or relatives.Goshtasp needs to solve this problem to get money, you need to solve it to get score!", "pruebas": {"caso 1": ["11", "Returns: 11=11"], "caso 2": ["545", "Returns: 541+3+1=545"]}, "url": "https://codeforces.com//problemset/problem/72/A"},
{"titulo": "\rBeaver", "categoria": ["data structures", "dp", "greedy", "hashing", "strings", "two pointers"], "dificultad": "1800", "enunciado": "After Fox Ciel got off a bus, she found that the bus she was on was a wrong bus and she lost her way in a strange town. However, she fortunately met her friend Beaver Taro and asked which way to go to her castle. Taro's response to her was a string , and she tried to remember the string  correctly.However, Ciel feels  strings ,\u2009,\u2009... ,\u2009 are really boring, and unfortunately she dislikes to remember a string that contains a boring substring. To make the thing worse, what she can remember is only the contiguous substring of .Determine the longest contiguous substring of  that does not contain any boring string, so that she can remember the longest part of Taro's response.", "pruebas": {"caso 1": ["Go_straight_along_this_street", "5", "str", "long", "tree", "biginteger", "ellipse", "Returns: 12 4"], "caso 2": ["IhaveNoIdea", "9", "I", "h", "a", "v", "e", "N", "o", "I", "d", "Returns: 0 0"], "caso 3": ["unagioisii", "2", "ioi", "unagi", "Returns: 5 5"]}, "url": "https://codeforces.com//problemset/problem/79/C"},
{"titulo": "\rEmbassyQueue", "categoria": ["data structures", "greedy"], "dificultad": "1800", "enunciado": "In an embassy of a well-known kingdom an electronic queue is organised. Every person who comes to the embassy, needs to make the following three actions: show the ID, pay money to the cashier and be fingerprinted. Besides, the actions should be performed in the given order.For each action several separate windows are singled out:  separate windows for the first action (the first type windows),  windows for the second one (the second type windows), and  for the third one (the third type windows). The service time for one person in any of the first type window equals to . Similarly, it takes  time to serve a person in any of the second type windows. And it takes  to serve one person in any of the third type windows. Thus, the service time depends only on the window type and is independent from the person who is applying for visa.At some moment  people come to the embassy, the -th person comes at the moment of time . The person is registered under some number. After that he sits in the hall and waits for his number to be shown on a special board. Besides the person's number the board shows the number of the window where one should go and the person goes there immediately. Let's consider that the time needed to approach the window is negligible. The table can show information for no more than one person at a time. The electronic queue works so as to immediately start working with the person who has approached the window, as there are no other people in front of the window.The Client Service Quality inspectors noticed that several people spend too much time in the embassy (this is particularly tiresome as the embassy has no mobile phone reception and 3G). It was decided to organise the system so that the largest time a person spends in the embassy were minimum. Help the inspectors organise the queue. Consider that all actions except for being served in at the window, happen instantly.", "pruebas": {"caso 1": ["1 1 1", "1 1 1", "5", "1 1 1 1 1", "Returns: 7"], "caso 2": ["2 1 1", "5 1 1", "5", "1 2 3 3 5", "Returns: 13"]}, "url": "https://codeforces.com//problemset/problem/85/B"},
{"titulo": "\rRobbery", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "It is nighttime and Joe the Elusive got into the country's main bank's safe. The safe has  cells positioned in a row, each of them contains some amount of diamonds. Let's make the problem more comfortable to work with and mark the cells with positive numbers from 1 to  from the left to the right.Unfortunately, Joe didn't switch the last security system off. On the plus side, he knows the way it works.Every minute the security system calculates the total amount of diamonds for each two adjacent cells (for the cells between whose numbers difference equals 1). As a result of this check we get an \u2009-\u20091 sums. If at least one of the sums differs from the corresponding sum received during the previous check, then the security system is triggered.Joe can move the diamonds from one cell to another between the security system's checks. He manages to move them no more than  times between two checks. One of the three following operations is regarded as moving a diamond: moving a diamond from any cell to any other one, moving a diamond from any cell to Joe's pocket, moving a diamond from Joe's pocket to any cell. Initially Joe's pocket is empty, and it can carry an unlimited amount of diamonds. It is considered that before all Joe's actions the system performs at least one check.In the morning the bank employees will come, which is why Joe has to leave the bank before that moment. Joe has only  minutes left before morning, and on each of these  minutes he can perform no more than  operations. All that remains in Joe's pocket, is considered his loot.Calculate the largest amount of diamonds Joe can carry with him. Don't forget that the security system shouldn't be triggered (even after Joe leaves the bank) and Joe should leave before morning.", "pruebas": {"caso 1": ["2 3 1", "2 3", "Returns: 0"], "caso 2": ["3 2 2", "4 1 3", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/89/A"},
{"titulo": "\rLuckyNumbers", "categoria": ["dp", "greedy"], "dificultad": "1800", "enunciado": "Petya loves lucky numbers. Everybody knows that positive integers are lucky if their decimal representation doesn't contain digits other than 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Lucky number is super lucky if it's decimal representation contains equal amount of digits 4 and 7. For example, numbers 47, 7744, 474477 are super lucky and 4, 744, 467 are not.One day Petya came across a positive integer . Help him to find the least super lucky number which is not less than .", "pruebas": {"caso 1": ["4500", "Returns: 4747"], "caso 2": ["47", "Returns: 47"]}, "url": "https://codeforces.com//problemset/problem/95/B"},
{"titulo": "\rNewYearCards", "categoria": ["brute force", "greedy", "implementation"], "dificultad": "1800", "enunciado": "As meticulous Gerald sets the table, Alexander finished another post on Codeforces and begins to respond to New Year greetings from friends. Alexander has  friends, and each of them sends to Alexander exactly one e-card. Let us number his friends by numbers from 1 to  in the order in which they send the cards. Let's introduce the same numbering for the cards, that is, according to the numbering the -th friend sent to Alexander a card number .Alexander also sends cards to friends, but he doesn't look for the new cards on the Net. He simply uses the cards previously sent to him (sometimes, however, he does need to add some crucial details). Initially Alexander doesn't have any cards. Alexander always follows the two rules: He will never send to a firend a card that this friend has sent to him.  Among the other cards available to him at the moment, Alexander always chooses one that Alexander himself likes most. Alexander plans to send to each friend exactly one card. Of course, Alexander can send the same card multiple times.Alexander and each his friend has the list of preferences, which is a permutation of integers from 1 to . The first number in the list is the number of the favorite card, the second number shows the second favorite, and so on, the last number shows the least favorite card.Your task is to find a schedule of sending cards for Alexander. Determine at which moments of time Alexander must send cards to his friends, to please each of them as much as possible. In other words, so that as a result of applying two Alexander's rules, each friend receives the card that is preferred for him as much as possible.Note that Alexander doesn't choose freely what card to send, but he always strictly follows the two rules.", "pruebas": {"caso 1": ["4", "1 2 3 4", "4 1 3 2", "4 3 1 2", "3 4 2 1", "3 1 2 4", "Returns: 2 1 1 4"]}, "url": "https://codeforces.com//problemset/problem/140/B"},
{"titulo": "\rNewYearSnowmen", "categoria": ["binary search", "data structures", "greedy"], "dificultad": "1800", "enunciado": "As meticulous Gerald sets the table and caring Alexander sends the postcards, Sergey makes snowmen. Each showman should consist of three snowballs: a big one, a medium one and a small one. Sergey's twins help him: they've already made  snowballs with radii equal to , , ..., . To make a snowman, one needs any three snowballs whose radii are pairwise different. For example, the balls with radii 1, 2 and 3 can be used to make a snowman but 2, 2, 3 or 2, 2, 2 cannot. Help Sergey and his twins to determine what maximum number of snowmen they can make from those snowballs.", "pruebas": {"caso 1": ["7", "1 2 3 4 5 6 7", "Returns: 2"], "caso 2": ["3 2 1", "6 5 4", "3", "2 2 3", "Returns: 0"]}, "url": "https://codeforces.com//problemset/problem/140/C"},
{"titulo": "\rNewYearContest", "categoria": ["greedy", "sortings"], "dificultad": "1800", "enunciado": "As Gerald sets the table, Alexander sends the greeting cards, and Sergey and his twins create an army of clone snowmen, Gennady writes a New Year contest.The New Year contest begins at 18:00 (6.00 P.M.) on December 31 and ends at 6:00 (6.00 A.M.) on January 1. There are  problems for the contest. The penalty time for each solved problem is set as the distance from the moment of solution submission to the New Year in minutes. For example, the problem submitted at 21:00 (9.00 P.M.) gets penalty time 180, as well as the problem submitted at 3:00 (3.00 A.M.). The total penalty time is calculated as the sum of penalty time for all solved problems. It is allowed to submit a problem exactly at the end of the contest, at 6:00 (6.00 A.M.).Gennady opened the problems exactly at 18:00 (6.00 P.M.) and managed to estimate their complexity during the first 10 minutes of the contest. He believes that writing a solution for the -th problem will take  minutes. Gennady can submit a solution for evaluation at any time after he completes writing it. Probably he will have to distract from writing some solution to send the solutions of other problems for evaluation. The time needed to send the solutions can be neglected, i.e. this time can be considered to equal zero. Gennady can simultaneously submit multiple solutions. Besides, he can move at any time from writing one problem to another, and then return to the first problem from the very same place, where he has left it. Thus the total solution writing time of the -th problem always equals  minutes. Of course, Gennady does not commit wrong attempts, and his solutions are always correct and are accepted from the first attempt. He can begin to write the solutions starting from 18:10 (6.10 P.M.).Help Gennady choose from the strategies that help him solve the maximum possible number of problems, the one with which his total penalty time will be minimum.", "pruebas": {"caso 1": ["3", "30 330 720", "Returns: 2 10"]}, "url": "https://codeforces.com//problemset/problem/140/D"},
{"titulo": "AndreyandProblem", "categoria": ["greedy", "math", "probabilities"], "dificultad": "1800", "enunciado": "Andrey needs one more problem to conduct a programming contest. He has  friends who are always willing to help. He can ask some of them to come up with a contest problem. Andrey knows one value for each of his fiends \u2014 the probability that this friend will come up with a problem if Andrey asks him.Help Andrey choose people to ask. As he needs only one problem, Andrey is going to be really upset if no one comes up with a problem or if he gets more than one problem from his friends. You need to choose such a set of people that maximizes the chances of Andrey not getting upset.", "pruebas": {"caso 1": ["4", "0.1 0.2 0.3 0.8", "Returns: 0.800000000000"], "caso 2": ["2", "0.1 0.2", "Returns: 0.260000000000"]}, "url": "https://codeforces.com//problemset/problem/442/B"},
{"titulo": "TableDecorations", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "You have  red,  green and  blue balloons. To decorate a single table for the banquet you need exactly three balloons. Three balloons attached to some table shouldn't have the same color. What maximum number  of tables can be decorated if we know number of balloons of each color?Your task is to write a program that for given values ,  and  will find the maximum number  of tables, that can be decorated in the required manner.", "pruebas": {"caso 1": ["5 4 3", "Returns: 4"], "caso 2": ["1 1 1", "Returns: 1"], "caso 3": ["2 3 3", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/478/C"},
{"titulo": "CliqueProblem", "categoria": ["data structures", "dp", "greedy", "implementation", "sortings"], "dificultad": "1800", "enunciado": "The clique problem is one of the most well-known NP-complete problems. Under some simplification it can be formulated as follows. Consider an undirected graph . It is required to find a subset of vertices  of the maximum size such that any two of them are connected by an edge in graph . Sounds simple, doesn't it? Nobody yet knows an algorithm that finds a solution to this problem in polynomial time of the size of the graph. However, as with many other NP-complete problems, the clique problem is easier if you consider a specific type of a graph.Consider  distinct points on a line. Let the -th point have the coordinate  and weight . Let's form graph , whose vertices are these points and edges connect exactly the pairs of points (,\u2009), such that the distance between them is not less than the sum of their weights, or more formally: |\u2009-\u2009|\u2009\u2265\u2009\u2009+\u2009.Find the size of the maximum clique in such graph.", "pruebas": {"caso 1": ["4", "2 3", "3 1", "6 1", "0 2", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/527/D"},
{"titulo": "CorrectingMistakes", "categoria": ["constructive algorithms", "dp", "greedy", "hashing", "strings", "two pointers"], "dificultad": "1800", "enunciado": "Analyzing the mistakes people make while typing search queries is a complex and an interesting work. As there is no guaranteed way to determine what the user originally meant by typing some query, we have to use different sorts of heuristics.Polycarp needed to write a code that could, given two words, check whether they could have been obtained from the same word as a result of typos. Polycarpus suggested that the most common typo is skipping exactly one letter as you type a word.Implement a program that can, given two distinct words  and  of the same length  determine how many words  of length \u2009+\u20091 are there with such property that you can transform  into both , and  by deleting exactly one character. Words  and  consist of lowercase English letters. Word  also should consist of lowercase English letters.", "pruebas": {"caso 1": ["7", "reading", "trading", "Returns: 1"], "caso 2": ["5", "sweet", "sheep", "Returns: 0"], "caso 3": ["3", "toy", "try", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/533/E"},
{"titulo": "MakePalindrome", "categoria": ["constructive algorithms", "greedy", "strings"], "dificultad": "1800", "enunciado": "A string is called palindrome if it reads the same from left to right and from right to left. For example \"kazak\", \"oo\", \"r\" and \"mikhailrubinchikkihcniburliahkim\" are palindroms, but strings \"abb\" and \"ij\" are not.You are given string  consisting of lowercase Latin letters. At once you can choose any position in the string and change letter in that position to any other lowercase letter. So after each changing the length of the string doesn't change. At first you can change some letters in . Then you can permute the order of letters as you want. Permutation doesn't count as changes. You should obtain palindrome with the minimal number of changes. If there are several ways to do that you should get the lexicographically (alphabetically) smallest palindrome. So firstly you should minimize the number of changes and then minimize the palindrome lexicographically.", "pruebas": {"caso 1": ["aabc", "Returns: abba"], "caso 2": ["aabcd", "Returns: abcba"]}, "url": "https://codeforces.com//problemset/problem/600/C"},
{"titulo": "TheUnionofk-Segments", "categoria": ["greedy", "sortings"], "dificultad": "1800", "enunciado": "You are given  segments on the coordinate axis Ox and the number . The point is satisfied if it belongs to at least  segments. Find the smallest (by the number of segments) set of segments on the coordinate axis Ox which contains all satisfied points and no others.", "pruebas": {"caso 1": ["3 2", "0 5", "-3 2", "3 8", "Returns: 2"], "caso 2": ["0 2", "3 5", "3 2", "0 5", "-3 3", "3 8", "Returns: 1"]}, "url": "https://codeforces.com//problemset/problem/612/D"},
{"titulo": "RoadImprovement", "categoria": ["*special problem", "dfs and similar", "graphs", "greedy", "trees"], "dificultad": "1800", "enunciado": "In Berland there are  cities and \u2009-\u20091 bidirectional roads. Each road connects some pair of cities, from any city you can get to any other one using only the given roads.In each city there is exactly one repair brigade. To repair some road, you need two teams based in the cities connected by the road to work simultaneously for one day. Both brigades repair one road for the whole day and cannot take part in repairing other roads on that day. But the repair brigade can do nothing on that day.Determine the minimum number of days needed to repair all the roads. The brigades cannot change the cities where they initially are.", "pruebas": {"caso 1": ["4", "1 2", "3 4", "3 2", "Returns: 2"], "caso 2": ["2 2 1", "1 3", "6", "3 4", "5 4", "3 2", "1 3", "4 6", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/638/C"},
{"titulo": "Rebus", "categoria": ["constructive algorithms", "expression parsing", "greedy", "math"], "dificultad": "1800", "enunciado": "You are given a rebus of form ? + ? - ? + ? = n, consisting of only question marks, separated by arithmetic operation '+' and '-', equality and positive integer . The goal is to replace each question mark with some positive integer from 1 to , such that equality holds.", "pruebas": {"caso 1": ["? + ? - ? + ? + ? = 42", "Returns: Possible"], "caso 2": ["9 + 13 - 39 + 28 + 31 = 42", "? - ? = 1", "Returns: Impossible"], "caso 3": ["? = 1000000", "Returns: Possible"]}, "url": "https://codeforces.com//problemset/problem/663/A"},
{"titulo": "SimpleSubset", "categoria": ["constructive algorithms", "greedy", "number theory"], "dificultad": "1800", "enunciado": "A tuple of positive integers {,\u2009,\u2009...,\u2009} is called simple if for all pairs of positive integers (,\u2009\u2009) (1\u2009\u2009\u2264\u2009\u2009\u2009<\u2009\u2009\u2009\u2264\u2009), \u2009\u2009+\u2009\u2009 is a prime.You are given an array  with  positive integers ,\u2009\u2009,\u2009\u2009...,\u2009\u2009 (not necessary distinct). You want to find a simple subset of the array  with the maximum size.A prime number (or a prime) is a natural number greater than 1 that has no positive divisors other than 1 and itself.Let's define a subset of the array  as a tuple that can be obtained from  by removing some (possibly all) elements of it.", "pruebas": {"caso 1": ["2", "2 3", "Returns: 2"], "caso 2": ["3 2", "2", "2 2", "Returns: 1"], "caso 3": ["2", "3", "2 1 1", "Returns: 3"], "caso 4": ["1 1 2", "2", "83 14", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/665/D"},
{"titulo": "RecyclingBottles", "categoria": ["dp", "geometry", "greedy", "implementation"], "dificultad": "1800", "enunciado": "It was recycling day in Kekoland. To celebrate it Adil and Bera went to Central Perk where they can take bottles from the ground and put them into a recycling bin.We can think Central Perk as coordinate plane. There are  bottles on the ground, the -th bottle is located at position (,\u2009). Both Adil and Bera can carry only one bottle at once each. For both Adil and Bera the process looks as follows:  Choose to stop or to continue to collect bottles.  If the choice was to continue then choose some bottle and walk towards it.  Pick this bottle and walk to the recycling bin.  Go to step 1. Adil and Bera may move independently. They are allowed to pick bottles simultaneously, all bottles may be picked by any of the two, it's allowed that one of them stays still while the other one continues to pick bottles.They want to organize the process such that the total distance they walk (the sum of distance walked by Adil and distance walked by Bera) is minimum possible. Of course, at the end all bottles should lie in the recycling bin.", "pruebas": {"caso 1": ["3 1 1 2 0 0", "3", "1 1", "2 1", "2 3", "Returns: 11.084259940083"], "caso 2": ["5 0 4 2 2 0", "5", "5 2", "3 0", "5 5", "3 5", "3 3", "Returns: 33.121375178000"]}, "url": "https://codeforces.com//problemset/problem/671/A"},
{"titulo": "RayTracing", "categoria": ["greedy", "hashing", "implementation", "math", "number theory", "sortings"], "dificultad": "1800", "enunciado": "There are  sensors located in the rectangular room of size \u2009\u00d7\u2009 meters. The -th sensor is located at point (,\u2009). All sensors are located at distinct points strictly inside the rectangle. Opposite corners of the room are located at points (0,\u20090) and (,\u2009). Walls of the room are parallel to coordinate axes.At the moment 0, from the point (0,\u20090) the laser ray is released in the direction of point (1,\u20091). The ray travels with a speed of  meters per second. Thus, the ray will reach the point (1,\u20091) in exactly one second after the start.When the ray meets the wall it's reflected by the rule that the angle of incidence is equal to the angle of reflection. If the ray reaches any of the four corners, it immediately stops.For each sensor you have to determine the first moment of time when the ray will pass through the point where this sensor is located. If the ray will never pass through this point, print \u2009-\u20091 for such sensors.", "pruebas": {"caso 1": ["3 3 4", "1 1", "1 2", "2 1", "2 2", "Returns: 1"], "caso 2": ["-1", "-1", "2", "3 4 6", "1 1", "2 1", "1 2", "2 2", "1 3", "2 3", "Returns: 1"], "caso 3": ["-1", "-1", "2", "5", "-1", "7 4 5", "1 3", "2 2", "5 1", "5 3", "4 3", "Returns: 13"]}, "url": "https://codeforces.com//problemset/problem/724/C"},
{"titulo": "ContestBalloons", "categoria": ["data structures", "greedy"], "dificultad": "1800", "enunciado": "One tradition of ACM-ICPC contests is that a team gets a balloon for every solved problem. We assume that the submission time doesn't matter and teams are sorted only by the number of balloons they have. It means that one's place is equal to the number of teams with more balloons, increased by 1. For example, if there are seven teams with more balloons, you get the eight place. Ties are allowed.You should know that it's important to eat before a contest. If the number of balloons of a team is greater than the weight of this team, the team starts to float in the air together with their workstation. They eventually touch the ceiling, what is strictly forbidden by the rules. The team is then disqualified and isn't considered in the standings.A contest has just finished. There are  teams, numbered 1 through . The -th team has  balloons and weight . It's guaranteed that  doesn't exceed  so nobody floats initially.Limak is a member of the first team. He doesn't like cheating and he would never steal balloons from other teams. Instead, he can give his balloons away to other teams, possibly making them float. Limak can give away zero or more balloons of his team. Obviously, he can't give away more balloons than his team initially has.What is the best place Limak can get?", "pruebas": {"caso 1": ["8", "20 1000", "32 37", "40 1000", "45 50", "16 16", "16 16", "14 1000", "2 1000", "Returns: 3"], "caso 2": ["7", "4 4", "4 4", "4 4", "4 4", "4 4", "4 4", "5 5", "Returns: 2"], "caso 3": ["7", "14000000003 1000000000000000000", "81000000000 88000000000", "5000000000 7000000000", "15000000000 39000000000", "46000000000 51000000000", "0 1000000000", "0 0", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/725/D"},
{"titulo": "T-shirtsDistribution", "categoria": ["constructive algorithms", "flows", "greedy"], "dificultad": "1800", "enunciado": "The organizers of a programming contest have decided to present t-shirts to participants. There are six different t-shirts sizes in this problem: S, M, L, XL, XXL, XXXL (sizes are listed in increasing order). The t-shirts are already prepared. For each size from S to XXXL you are given the number of t-shirts of this size.During the registration, the organizers asked each of the  participants about the t-shirt size he wants. If a participant hesitated between two sizes, he could specify two neighboring sizes\u00a0\u2014 this means that any of these two sizes suits him.Write a program that will determine whether it is possible to present a t-shirt to each participant of the competition, or not. Of course, each participant should get a t-shirt of proper size:  the size he wanted, if he specified one size;  any of the two neibouring sizes, if he specified two sizes. If it is possible, the program should find any valid distribution of the t-shirts.", "pruebas": {"caso 1": ["0 1 0 1 1 0", "3", "XL", "S,M", "XL,XXL", "Returns: YES"], "caso 2": ["XL", "M", "XXL", "1 1 2 0 1 1", "5", "S", "M", "S,M", "XXL,XXXL", "XL,XXL", "Returns: NO"]}, "url": "https://codeforces.com//problemset/problem/727/D"},
{"titulo": "Toda2", "categoria": ["greedy", "implementation"], "dificultad": "1800", "enunciado": "A group of  friends enjoys playing popular video game Toda 2. There is a rating system describing skill level of each player, initially the rating of the -th friend is .The friends decided to take part in the championship as a team. But they should have equal ratings to be allowed to compose a single team consisting of all  friends. So the friends are faced with the problem: how to make all their ratings equal.One way to change ratings is to willingly lose in some matches. Friends can form a party consisting of two to five (but not more than ) friends and play a match in the game. When the party loses, the rating of each of its members decreases by 1. A rating can't become negative, so \u2009=\u20090 doesn't change after losing.The friends can take part in multiple matches, each time making a party from any subset of friends (but remember about constraints on party size: from 2 to 5 members).The friends want to make their ratings equal but as high as possible.Help the friends develop a strategy of losing the matches so that all their ratings become equal and the resulting rating is maximum possible.", "pruebas": {"caso 1": ["5", "4 5 1 7 4", "Returns: 1"], "caso 2": ["8", "01010", "00011", "01010", "10010", "00011", "11000", "00011", "11000", "2", "1 2", "Returns: 0"], "caso 3": ["2", "11", "11", "3", "1 1 1", "Returns: 1"]}, "url": "https://codeforces.com//problemset/problem/730/A"},
{"titulo": "EpidemicinMonstropolis", "categoria": ["constructive algorithms", "dp", "greedy", "two pointers"], "dificultad": "1800", "enunciado": "There was an epidemic in Monstropolis and all monsters became sick. To recover, all monsters lined up in queue for an appointment to the only doctor in the city.Soon, monsters became hungry and began to eat each other. One monster can eat other monster if its weight is strictly greater than the weight of the monster being eaten, and they stand in the queue next to each other. Monsters eat each other instantly. There are no monsters which are being eaten at the same moment. After the monster  eats the monster , the weight of the monster  increases by the weight of the eaten monster . In result of such eating the length of the queue decreases by one, all monsters after the eaten one step forward so that there is no empty places in the queue again. A monster can eat several monsters one after another. Initially there were  monsters in the queue, the -th of which had weight .For example, if weights are [1,\u20092,\u20092,\u20092,\u20091,\u20092] (in order of queue, monsters are numbered from 1 to 6 from left to right) then some of the options are: the first monster can't eat the second monster because \u2009=\u20091 is not greater than \u2009=\u20092;  the second monster can't eat the third monster because \u2009=\u20092 is not greater than \u2009=\u20092;  the second monster can't eat the fifth monster because they are not neighbors;  the second monster can eat the first monster, the queue will be transformed to [3,\u20092,\u20092,\u20091,\u20092]. After some time, someone said a good joke and all monsters recovered. At that moment there were  (\u2009\u2264\u2009) monsters in the queue, the -th of which had weight . Both sequences ( and ) contain the weights of the monsters in the order from the first to the last.You are required to provide one of the possible orders of eating monsters which led to the current queue, or to determine that this could not happen. Assume that the doctor didn't make any appointments while monsters were eating each other.", "pruebas": {"caso 1": ["6", "1 2 2 2 1 2", "2", "5 5", "Returns: YES"], "caso 2": ["2 L", "1 R", "4 L", "3 L", "5", "1 2 3 4 5", "1", "15", "Returns: YES"], "caso 3": ["5 L", "4 L", "3 L", "2 L", "5", "1 1 1 3 3", "3", "2 1 6", "Returns: NO"]}, "url": "https://codeforces.com//problemset/problem/733/C"},
{"titulo": "WinterIsComing", "categoria": ["dp", "greedy", "sortings"], "dificultad": "1800", "enunciado": "The winter in Berland lasts  days. For each day we know the forecast for the average air temperature that day. Vasya has a new set of winter tires which allows him to drive safely no more than  days at any average air temperature. After  days of using it (regardless of the temperature of these days) the set of winter tires wears down and cannot be used more. It is not necessary that these  days form a continuous segment of days.Before the first winter day Vasya still uses summer tires. It is possible to drive safely on summer tires any number of days when the average air temperature is non-negative. It is impossible to drive on summer tires at days when the average air temperature is negative. Vasya can change summer tires to winter tires and vice versa at the beginning of any day.Find the minimum number of times Vasya needs to change summer tires to winter tires and vice versa to drive safely during the winter. At the end of the winter the car can be with any set of tires.", "pruebas": {"caso 1": ["4 3", "-5 20 -3 0", "Returns: 2"], "caso 2": ["4 2", "-5 20 -3 0", "Returns: 4"], "caso 3": ["10 6", "2 -5 1 3 0 0 -4 -3 1 0", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/747/D"},
{"titulo": "CloudofHashtags", "categoria": ["binary search", "greedy", "implementation", "strings"], "dificultad": "1800", "enunciado": "Vasya is an administrator of a public page of organization \"Mouse and keyboard\" and his everyday duty is to publish news from the world of competitive programming. For each news he also creates a list of hashtags to make searching for a particular topic more comfortable. For the purpose of this problem we define hashtag as a string consisting of lowercase English letters and exactly one symbol '#' located at the beginning of the string. The length of the hashtag is defined as the number of symbols in it without the symbol '#'.The head administrator of the page told Vasya that hashtags should go in lexicographical order (take a look at the notes section for the definition).Vasya is lazy so he doesn't want to actually change the order of hashtags in already published news. Instead, he decided to delete some suffixes (consecutive characters at the end of the string) of some of the hashtags. He is allowed to delete any number of characters, even the whole string except for the symbol '#'. Vasya wants to pick such a way to delete suffixes that the total number of deleted symbols is minimum possible. If there are several optimal solutions, he is fine with any of them.", "pruebas": {"caso 1": ["3", "#book", "#bigtown", "#big", "Returns: #b"], "caso 2": ["#big", "#big", "3", "#book", "#cool", "#cold", "Returns: #book"], "caso 3": ["#co", "#cold", "4", "#car", "#cart", "#art", "#at", "Returns: #"], "caso 4": ["#", "#art", "#at", "3", "#apple", "#apple", "#fruit", "Returns: #apple"]}, "url": "https://codeforces.com//problemset/problem/777/D"},
{"titulo": "NamingCompany", "categoria": ["games", "greedy", "sortings"], "dificultad": "1800", "enunciado": "Oleg the client and Igor the analyst are good friends. However, sometimes they argue over little things. Recently, they started a new company, but they are having trouble finding a name for the company.To settle this problem, they've decided to play a game. The company name will consist of  letters. Oleg and Igor each have a set of  letters (which might contain multiple copies of the same letter, the sets can be different). Initially, the company name is denoted by  question marks. Oleg and Igor takes turns to play the game, Oleg moves first. In each turn, a player can choose one of the letters  in his set and replace any of the question marks with . Then, a copy of the letter  is removed from his set. The game ends when all the question marks has been replaced by some letter.For example, suppose Oleg has the set of letters {,\u2009,\u2009} and Igor has the set of letters {,\u2009,\u2009}. One possible game is as follows :Initially, the company name is ???.Oleg replaces the second question mark with 'i'. The company name becomes ?i?. The set of letters Oleg have now is {,\u2009}.Igor replaces the third question mark with 'o'. The company name becomes ?io. The set of letters Igor have now is {,\u2009}.Finally, Oleg replaces the first question mark with 'o'. The company name becomes oio. The set of letters Oleg have now is {}.In the end, the company name is oio.Oleg wants the company name to be as lexicographically small as possible while Igor wants the company name to be as lexicographically large as possible. What will be the company name if Oleg and Igor always play optimally?A string \u2009=\u2009... is called lexicographically smaller than a string \u2009=\u2009... (where \u2009\u2260\u2009) if \u2009<\u2009 where  is the smallest index such that \u2009\u2260\u2009. (so \u2009=\u2009 for all \u2009<\u2009)", "pruebas": {"caso 1": ["tinkoff", "zscoder", "Returns: fzfsirk"], "caso 2": ["xxxxxx", "xxxxxx", "Returns: xxxxxx"], "caso 3": ["ioi", "imo", "Returns: ioi"]}, "url": "https://codeforces.com//problemset/problem/794/C"},
{"titulo": "HeidiandLibrary(easy)", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "Your search for Heidi is over \u2013 you finally found her at a library, dressed up as a human. In fact, she has spent so much time there that she now runs the place! Her job is to buy books and keep them at the library so that people can borrow and read them. There are  different books, numbered 1 through .We will look at the library's operation during  consecutive days. Heidi knows in advance that on the -th day (1\u2009\u2264\u2009\u2009\u2264\u2009) precisely one person will come to the library, request to borrow the book , read it in a few hours, and return the book later on the same day.Heidi desperately wants to please all her guests, so she will make sure to always have the book  available in the library on the -th day. During the night before the -th day, she has the option of going to the bookstore (which operates at nights to avoid competition with the library) and buying any book for the price of 1 CHF. Of course, if she already has a book at the library, she does not need to buy it again. Initially, the library contains no books.There is a problem, though. The capacity of the library is  \u2013 this means that at any time, there can be at most  books at the library. If buying a new book would cause Heidi to have more than  books, she must first get rid of some book that she already has, in order to make room for the new book. If she later needs a book that she got rid of, she will need to buy that book again.You are given  and the sequence of requests for books ,\u2009,\u2009...,\u2009. What is the minimum cost (in CHF) of buying new books to satisfy all the requests?", "pruebas": {"caso 1": ["4 80", "1 2 2 1", "Returns: 2"], "caso 2": ["4 1", "1 2 2 1", "Returns: 3"], "caso 3": ["4 2", "1 2 3 1", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/802/A"},
{"titulo": "HeidiandLibrary(medium)", "categoria": ["data structures", "greedy"], "dificultad": "1800", "enunciado": "Whereas humans nowadays read fewer and fewer books on paper, book readership among marmots has surged. Heidi has expanded the library and is now serving longer request sequences.", "pruebas": {"caso 1": ["4 100", "1 2 2 1", "Returns: 2"], "caso 2": ["4 1", "1 2 2 1", "Returns: 3"], "caso 3": ["4 2", "1 2 3 1", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/802/B"},
{"titulo": "MyprettygirlNoora", "categoria": ["brute force", "dp", "greedy", "math", "number theory"], "dificultad": "1800", "enunciado": "In Pavlopolis University where Noora studies it was decided to hold beauty contest \"Miss Pavlopolis University\". Let's describe the process of choosing the most beautiful girl in the university in more detail.The contest is held in several stages. Suppose that exactly  girls participate in the competition initially. All the participants are divided into equal groups,  participants in each group. Furthermore the number  is chosen arbitrarily, i. e. on every stage number  can be different. Within each group the jury of the contest compares beauty of the girls in the format \"each with each\". In this way, if group consists of  girls, then  comparisons occur. Then, from each group, the most beautiful participant is selected. Selected girls enter the next stage of the competition. Thus if  girls were divided into groups,  participants in each group, then exactly  participants will enter the next stage. The contest continues until there is exactly one girl left who will be \"Miss Pavlopolis University\"But for the jury this contest is a very tedious task. They would like to divide the girls into groups in each stage so that the total number of pairwise comparisons of the girls is as few as possible. Let () be the minimal total number of comparisons that should be made to select the most beautiful participant, if we admit  girls to the first stage.The organizers of the competition are insane. They give Noora three integers ,  and  and ask the poor girl to calculate the value of the following expression: \u00b7()\u2009+\u2009\u00b7(\u2009+\u20091)\u2009+\u2009...\u2009+\u2009\u00b7(). However, since the value of this expression can be quite large the organizers ask her to calculate it modulo 10\u2009+\u20097. If Noora can calculate the value of this expression the organizers promise her to help during the beauty contest. But the poor girl is not strong in mathematics, so she turned for help to Leha and he turned to you.", "pruebas": {"caso 1": ["2 2 4", "Returns: 19"]}, "url": "https://codeforces.com//problemset/problem/822/D"},
{"titulo": "HighLoad", "categoria": ["constructive algorithms", "greedy", "implementation", "trees"], "dificultad": "1800", "enunciado": "Arkady needs your help again! This time he decided to build his own high-speed Internet exchange point. It should consist of  nodes connected with minimum possible number of wires into one network (a wire directly connects two nodes). Exactly  of the nodes should be exit-nodes, that means that each of them should be connected to exactly one other node of the network, while all other nodes should be connected to at least two nodes in order to increase the system stability.Arkady wants to make the system as fast as possible, so he wants to minimize the maximum distance between two exit-nodes. The distance between two nodes is the number of wires a package needs to go through between those two nodes.Help Arkady to find such a way to build the network that the distance between the two most distant exit-nodes is as small as possible.", "pruebas": {"caso 1": ["3 2", "Returns: 2"], "caso 2": ["1 2", "2 3", "5 3", "Returns: 3"]}, "url": "https://codeforces.com//problemset/problem/827/B"},
{"titulo": "OfficeKeys", "categoria": ["binary search", "brute force", "dp", "greedy", "sortings"], "dificultad": "1800", "enunciado": "There are  people and  keys on a straight line. Every person wants to get to the office which is located on the line as well. To do that, he needs to reach some point with a key, take the key and then go to the office. Once a key is taken by somebody, it couldn't be taken by anybody else.You are to determine the minimum time needed for all  people to get to the office with keys. Assume that people move a unit distance per 1 second. If two people reach a key at the same time, only one of them can take the key. A person can pass through a point with a key without taking it.", "pruebas": {"caso 1": ["2 4 50", "20 100", "60 10 40 80", "Returns: 50"], "caso 2": ["1 2 10", "11", "15 7", "Returns: 7"]}, "url": "https://codeforces.com//problemset/problem/830/A"},
{"titulo": "DrivingTest", "categoria": ["data structures", "dp", "greedy"], "dificultad": "1800", "enunciado": "Polycarp has just attempted to pass the driving test. He ran over the straight road with the signs of four types. speed limit: this sign comes with a positive integer number \u2014 maximal speed of the car after the sign (cancel the action of the previous sign of this type);  overtake is allowed: this sign means that after some car meets it, it can overtake any other car;  no speed limit: this sign cancels speed limit if any (car can move with arbitrary speed after this sign);  no overtake allowed: some car can't overtake any other car after this sign. Polycarp goes past the signs consequentially, each new sign cancels the action of all the previous signs of it's kind (speed limit/overtake). It is possible that two or more \"no overtake allowed\" signs go one after another with zero \"overtake is allowed\" signs between them. It works with \"no speed limit\" and \"overtake is allowed\" signs as well.In the beginning of the ride overtake is allowed and there is no speed limit.You are given the sequence of events in chronological order \u2014 events which happened to Polycarp during the ride. There are events of following types: Polycarp changes the speed of his car to specified (this event comes with a positive integer number);  Polycarp's car overtakes the other car;  Polycarp's car goes past the \"speed limit\" sign (this sign comes with a positive integer);  Polycarp's car goes past the \"overtake is allowed\" sign;  Polycarp's car goes past the \"no speed limit\";  Polycarp's car goes past the \"no overtake allowed\"; It is guaranteed that the first event in chronological order is the event of type 1 (Polycarp changed the speed of his car to specified).After the exam Polycarp can justify his rule violations by telling the driving instructor that he just didn't notice some of the signs. What is the minimal number of signs Polycarp should say he didn't notice, so that he would make no rule violations from his point of view?", "pruebas": {"caso 1": ["11", "1 100", "3 70", "4", "2", "3 120", "5", "3 120", "6", "1 150", "4", "3 300", "Returns: 2"], "caso 2": ["5", "1 100", "3 200", "2", "4", "5", "Returns: 0"], "caso 3": ["7", "1 20", "2", "6", "4", "6", "6", "2", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/845/D"},
{"titulo": "MathShow", "categoria": ["brute force", "greedy"], "dificultad": "1800", "enunciado": "Polycarp takes part in a math show. He is given  tasks, each consists of  subtasks, numbered 1 through . It takes him  minutes to solve the -th subtask of any task. Thus, time required to solve a subtask depends only on its index, but not on the task itself. Polycarp can solve subtasks in any order.By solving subtask of arbitrary problem he earns one point. Thus, the number of points for task is equal to the number of solved subtasks in it. Moreover, if Polycarp completely solves the task (solves all  of its subtasks), he recieves one extra point. Thus, total number of points he recieves for the complete solution of the task is \u2009+\u20091.Polycarp has  minutes of time. What is the maximum number of points he can earn?", "pruebas": {"caso 1": ["3 4 11", "1 2 3 4", "Returns: 6"], "caso 2": ["5 5 10", "1 2 4 8 16", "Returns: 7"]}, "url": "https://codeforces.com//problemset/problem/846/B"},
{"titulo": "TravelCards", "categoria": ["greedy", "implementation", "sortings"], "dificultad": "1800", "enunciado": "In the evening Polycarp decided to analyze his today's travel expenses on public transport.The bus system in the capital of Berland is arranged in such a way that each bus runs along the route between two stops. Each bus has no intermediate stops. So each of the buses continuously runs along the route from one stop to the other and back. There is at most one bus running between a pair of stops.Polycarp made  trips on buses. About each trip the stop where he started the trip and the the stop where he finished are known. The trips follow in the chronological order in Polycarp's notes.It is known that one trip on any bus costs  burles. In case when passenger makes a transshipment the cost of trip decreases to  burles (\u2009<\u2009). A passenger makes a transshipment if the stop on which he boards the bus coincides with the stop where he left the previous bus. Obviously, the first trip can not be made with transshipment.For example, if Polycarp made three consecutive trips: \"BerBank\"  \"University\", \"University\"  \"BerMall\", \"University\"  \"BerBank\", then he payed \u2009+\u2009\u2009+\u2009\u2009=\u20092\u2009+\u2009 burles. From the BerBank he arrived to the University, where he made transshipment to the other bus and departed to the BerMall. Then he walked to the University and returned to the BerBank by bus.Also Polycarp can buy no more than  travel cards. Each travel card costs  burles. The travel card for a single bus route makes free of charge any trip by this route (in both directions). Once purchased, a travel card can be used any number of times in any direction.What is the smallest amount of money Polycarp could have spent today if he can buy no more than  travel cards?", "pruebas": {"caso 1": ["3 5 3 1 8", "BerBank University", "University BerMall", "University BerBank", "Returns: 11"], "caso 2": ["4 2 1 300 1000", "a A", "A aa", "aa AA", "AA a", "Returns: 5"]}, "url": "https://codeforces.com//problemset/problem/847/K"},
{"titulo": "JuryMeeting", "categoria": ["greedy", "sortings", "two pointers"], "dificultad": "1800", "enunciado": "Country of Metropolia is holding Olympiad of Metrpolises soon. It mean that all jury members of the olympiad should meet together in Metropolis (the capital of the country) for the problem preparation process.There are \u2009+\u20091 cities consecutively numbered from 0 to . City 0 is Metropolis that is the meeting point for all jury members. For each city from 1 to  there is exactly one jury member living there. Olympiad preparation is a long and demanding process that requires  days of work. For all of these  days each of the  jury members should be present in Metropolis to be able to work on problems.You know the flight schedule in the country (jury members consider themselves important enough to only use flights for transportation). All flights in Metropolia are either going to Metropolis or out of Metropolis. There are no night flights in Metropolia, or in the other words, plane always takes off at the same day it arrives. On his arrival day and departure day jury member is not able to discuss the olympiad. All flights in Megapolia depart and arrive at the same day.Gather everybody for  days in the capital is a hard objective, doing that while spending the minimum possible money is even harder. Nevertheless, your task is to arrange the cheapest way to bring all of the jury members to Metrpolis, so that they can work together for  days and then send them back to their home cities. Cost of the arrangement is defined as a total cost of tickets for all used flights. It is allowed for jury member to stay in Metropolis for more than  days.", "pruebas": {"caso 1": ["2 6 5", "1 1 0 5000", "3 2 0 5500", "2 2 0 6000", "15 0 2 9000", "9 0 1 7000", "8 0 2 6500", "Returns: 24500"], "caso 2": ["2 4 5", "1 2 0 5000", "2 1 0 4500", "2 1 0 3000", "8 0 1 6000", "Returns: -1"]}, "url": "https://codeforces.com//problemset/problem/853/B"},
{"titulo": "RoadWidening", "categoria": ["constructive algorithms", "greedy", "implementation"], "dificultad": "1800", "enunciado": "Mayor of city S just hates trees and lawns. They take so much space and there could be a road on the place they occupy!The Mayor thinks that one of the main city streets could be considerably widened on account of lawn nobody needs anyway. Moreover, that might help reduce the car jams which happen from time to time on the street.The street is split into  equal length parts from left to right, the -th part is characterized by two integers: width of road  and width of lawn .For each of  parts the Mayor should decide the size of lawn to demolish. For the -th part he can reduce lawn width by integer  (0\u2009\u2264\u2009\u2009\u2264\u2009). After it new road width of the -th part will be equal to '\u2009=\u2009\u2009+\u2009 and new lawn width will be equal to '\u2009=\u2009\u2009-\u2009.On the one hand, the Mayor wants to demolish as much lawn as possible (and replace it with road). On the other hand, he does not want to create a rapid widening or narrowing of the road, which would lead to car accidents. To avoid that, the Mayor decided that width of the road for consecutive parts should differ by at most 1, i.e. for each  (1\u2009\u2264\u2009\u2009<\u2009) the inequation |'\u2009-\u2009'|\u2009\u2264\u20091 should hold. Initially this condition might not be true.You need to find the the total width of lawns the Mayor will destroy according to his plan.", "pruebas": {"caso 1": ["3", "4 5", "4 5", "4 10", "Returns: 16"], "caso 2": ["9 9 10 ", "4", "1 100", "100 1", "1 100", "100 1", "Returns: 202"], "caso 3": ["101 101 101 101 ", "3", "1 1", "100 100", "1 1", "Returns: -1"]}, "url": "https://codeforces.com//problemset/problem/883/K"},
{"titulo": "TooEasyProblems", "categoria": ["binary search", "brute force", "data structures", "greedy", "sortings"], "dificultad": "1800", "enunciado": "You are preparing for an exam on scheduling theory. The exam will last for exactly  milliseconds and will consist of  problems. You can either solve problem  in exactly  milliseconds or ignore it and spend no time. You don't need time to rest after solving a problem, either.Unfortunately, your teacher considers some of the problems too easy for you. Thus, he assigned an integer  to every problem  meaning that the problem  can bring you a point to the final score only in case you have solved no more than  problems overall (including problem ).Formally, suppose you solve problems ,\u2009,\u2009...,\u2009 during the exam. Then, your final score  will be equal to the number of values of  between 1 and  such that \u2009\u2264\u2009.You have guessed that the real first problem of the exam is already in front of you. Therefore, you want to choose a set of problems to solve during the exam maximizing your final score in advance. Don't forget that the exam is limited in time, and you must have enough time to solve all chosen problems. If there exist different sets of problems leading to the maximum final score, any of them will do.", "pruebas": {"caso 1": ["5 300", "3 100", "4 150", "4 80", "2 90", "2 300", "Returns: 2"], "caso 2": ["3", "3 1 4", "2 100", "1 787", "2 788", "Returns: 0"], "caso 3": ["0", "2 100", "2 42", "2 58", "Returns: 2"]}, "url": "https://codeforces.com//problemset/problem/913/D"},
{"titulo": "TheMonster", "categoria": ["dp", "greedy", "implementation", "math"], "dificultad": "1800", "enunciado": "As Will is stuck in the Upside Down, he can still communicate with his mom, Joyce, through the Christmas lights (he can turn them on and off with his mind). He can't directly tell his mom where he is, because the monster that took him to the Upside Down will know and relocate him. Thus, he came up with a puzzle to tell his mom his coordinates. His coordinates are the answer to the following problem.A string consisting only of parentheses ('(' and ')') is called a bracket sequence. Some bracket sequence are called correct bracket sequences. More formally: Empty string is a correct bracket sequence.  if  is a correct bracket sequence, then () is also a correct bracket sequence.  if  and  are correct bracket sequences, then  (concatenation of  and ) is also a correct bracket sequence. A string consisting of parentheses and question marks ('?') is called pretty if and only if there's a way to replace each question mark with either '(' or ')' such that the resulting string is a non-empty correct bracket sequence.Will gave his mom a string  consisting of parentheses and question marks (using Morse code through the lights) and his coordinates are the number of pairs of integers (,\u2009) such that 1\u2009\u2264\u2009\u2009\u2264\u2009\u2009\u2264\u2009|| and the string ...  is pretty, where  is -th character of .Joyce doesn't know anything about bracket sequences, so she asked for your help.", "pruebas": {"caso 1": ["((?))", "Returns: 4"], "caso 2": ["??()??", "Returns: 7"]}, "url": "https://codeforces.com//problemset/problem/917/A"},
{"titulo": "RobotVacuumCleaner", "categoria": ["greedy", "sortings"], "dificultad": "1800", "enunciado": "Pushok the dog has been chasing Imp for a few hours already.Fortunately, Imp knows that Pushok is afraid of a robot vacuum cleaner. While moving, the robot generates a string  consisting of letters 's' and 'h', that produces a lot of noise. We define noise of string  as the number of occurrences of string \"sh\" as a subsequence in it, in other words, the number of such pairs (,\u2009), that \u2009<\u2009 and  and . The robot is off at the moment. Imp knows that it has a sequence of strings  in its memory, and he can arbitrary change their order. When the robot is started, it generates the string  as a concatenation of these strings in the given order. The noise of the resulting string equals the noise of this concatenation.Help Imp to find the maximum noise he can achieve by changing the order of the strings.", "pruebas": {"caso 1": ["4", "ssh", "hs", "s", "hhhs", "Returns: 18"], "caso 2": ["2", "h", "s", "Returns: 1"]}, "url": "https://codeforces.com//problemset/problem/922/D"},
{"titulo": "PerfectSecurity", "categoria": ["data structures", "greedy", "strings", "trees"], "dificultad": "1800", "enunciado": "Alice has a very important message  consisting of some non-negative integers that she wants to keep secret from Eve. Alice knows that the only theoretically secure cipher is one-time pad. Alice generates a random key  of the length equal to the message's length. Alice computes the bitwise xor of each element of the message and the key (, where  denotes the ) and stores this encrypted message . Alice is smart. Be like Alice.For example, Alice may have wanted to store a message \u2009=\u2009(0,\u200915,\u20099,\u200918). She generated a key \u2009=\u2009(16,\u20097,\u20096,\u20093). The encrypted message is thus \u2009=\u2009(16,\u20098,\u200915,\u200917).Alice realised that she cannot store the key with the encrypted message. Alice sent her key  to Bob and deleted her own copy. Alice is smart. Really, be like Alice.Bob realised that the encrypted message is only secure as long as the key is secret. Bob thus randomly permuted the key before storing it. Bob thinks that this way, even if Eve gets both the encrypted message and the key, she will not be able to read the message. Bob is not smart. Don't be like Bob.In the above example, Bob may have, for instance, selected a permutation (3,\u20094,\u20091,\u20092) and stored the permuted key \u2009=\u2009(6,\u20093,\u200916,\u20097).One year has passed and Alice wants to decrypt her message. Only now Bob has realised that this is impossible. As he has permuted the key randomly, the message is lost forever. Did we mention that Bob isn't smart?Bob wants to salvage at least some information from the message. Since he is not so smart, he asks for your help. You know the encrypted message  and the permuted key . What is the lexicographically smallest message that could have resulted in the given encrypted text?More precisely, for given  and , find the lexicographically smallest message , for which there exists a permutation \u03c0 such that  for every .Note that the sequence  is lexicographically smaller than the sequence , if there is an index  such that \u2009<\u2009 and for all \u2009<\u2009 the condition \u2009=\u2009 holds. ", "pruebas": {"caso 1": ["3", "8 4 13", "17 2 7", "Returns: 10 3 28"], "caso 2": ["5", "12 7 87 22 11", "18 39 9 12 16", "Returns: 0 14 69 6 44"], "caso 3": ["10", "331415699 278745619 998190004 423175621 42983144 166555524 843586353 802130100 337889448 685310951", "226011312 266003835 342809544 504667531 529814910 684873393 817026985 844010788 993949858 1031395667", "Returns: 128965467 243912600 4281110 112029883 223689619 76924724 429589 119397893 613490433 362863284"]}, "url": "https://codeforces.com//problemset/problem/923/C"},
{"titulo": "Maximize!", "categoria": ["binary search", "greedy", "ternary search", "two pointers"], "dificultad": "1800", "enunciado": "You are given a multiset  consisting of positive integers (initially empty). There are two kind of queries:  Add a positive integer to , the newly added integer is not less than any number in it.  Find a subset  of the set  such that the value  is maximum possible. Here () means maximum value of elements in , \u00a0\u2014 the average value of numbers in . Output this maximum possible value of . ", "pruebas": {"caso 1": ["6", "1 3", "2", "1 4", "2", "1 8", "2", "Returns: 0.0000000000"], "caso 2": ["0.5000000000", "3.0000000000", "4", "1 1", "1 4", "1 5", "2", "Returns: 2.0000000000"]}, "url": "https://codeforces.com//problemset/problem/939/E"},
{"titulo": "TreasureHunt", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "After the big birthday party, Katie still wanted Shiro to have some more fun. Later, she came up with a game called treasure hunt. Of course, she invited her best friends Kuro and Shiro to play with her.The three friends are very smart so they passed all the challenges very quickly and finally reached the destination. But the treasure can only belong to one cat so they started to think of something which can determine who is worthy of the treasure. Instantly, Kuro came up with some ribbons.A random colorful ribbon is given to each of the cats. Each color of the ribbon can be represented as an uppercase or lowercase Latin letter. Let's call a consecutive subsequence of colors that appears in the ribbon a subribbon. The beauty of a ribbon is defined as the maximum number of times one of its subribbon appears in the ribbon. The more the subribbon appears, the more beautiful is the ribbon. For example, the ribbon aaaaaaa has the beauty of 7 because its subribbon a appears 7 times, and the ribbon abcdabc has the beauty of 2 because its subribbon abc appears twice.The rules are simple. The game will have n turns. Every turn, each of the cats must change strictly one color (at one position) in his/her ribbon to an arbitrary color which is different from the unchanged one. For example, a ribbon aaab can be changed into acab in one turn. The one having the most beautiful ribbon after n turns wins the treasure.Could you find out who is going to be the winner if they all play optimally?", "pruebas": {"caso 1": ["3", "Kuroo", "Shiro", "Katie", "Returns: Kuro"], "caso 2": ["7", "treasurehunt", "threefriends", "hiCodeforces", "Returns: Shiro"], "caso 3": ["1", "abcabc", "cbabac", "ababca", "Returns: Katie"], "caso 4": ["15", "foPaErcvJ", "mZaxowpbt", "mkuOlaHRE", "Returns: Draw"]}, "url": "https://codeforces.com//problemset/problem/979/B"},
{"titulo": "Slime", "categoria": ["dp", "greedy", "implementation"], "dificultad": "1800", "enunciado": "There are n slimes in a row. Each slime has an integer value (possibly negative or zero) associated with it.Any slime can eat its adjacent slime (the closest slime to its left or to its right, assuming that this slime exists). When a slime with a value x eats a slime with a value y, the eaten slime disappears, and the value of the remaining slime changes to x - y.The slimes will eat each other until there is only one slime left. Find the maximum possible value of the last slime.", "pruebas": {"caso 1": ["4", "2 1 2 1", "Returns: 4"], "caso 2": ["5", "0 -1 -1 -1 -1", "Returns: 4"]}, "url": "https://codeforces.com//problemset/problem/1038/D"},
{"titulo": "EdgeDeletion", "categoria": ["graphs", "greedy", "shortest paths"], "dificultad": "1800", "enunciado": "You are given an undirected connected weighted graph consisting of n vertices and m edges. Let's denote the length of the shortest path from vertex 1 to vertex i as d_i. You have to erase some edges of the graph so that at most k edges remain. Let's call a vertex i good if there still exists a path from 1 to i with length d_i after erasing the edges.Your goal is to erase the edges in such a way that the number of good vertices is maximized.", "pruebas": {"caso 1": ["\n3 3 2\n1 2 1\n3 2 1\n1 3 3\n", "Returns: \n2\n1 2 "], "caso 2": ["\n4 5 2\n4 1 8\n2 4 1\n2 1 3\n3 4 9\n3 1 5\n", "Returns: \n2\n3 2 "]}, "url": "https://codeforces.com//problemset/problem/1076/D"},
{"titulo": "ThematicContests", "categoria": ["greedy", "sortings"], "dificultad": "1800", "enunciado": "Polycarp has prepared n competitive programming problems. The topic of the i-th problem is a_i, and some problems' topics may coincide.Polycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.Polycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that: number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;  the total number of problems in all the contests should be maximized. Your task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.", "pruebas": {"caso 1": ["\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n", "Returns: \n14\n"], "caso 2": ["\n10\n6 6 6 3 6 1000000000 3 3 6 6\n", "Returns: \n9\n"], "caso 3": ["\n3\n1337 1337 1337\n", "Returns: \n3\n"]}, "url": "https://codeforces.com//problemset/problem/1077/E"},
{"titulo": "ArrayandSegments(Easyversion)", "categoria": ["brute force", "greedy", "implementation"], "dificultad": "1800", "enunciado": "The only difference between easy and hard versions is a number of elements in the array.You are given an array a consisting of n integers. The value of the i-th element of the array is a_i.You are also given a set of m segments. The j-th segment is [l_j; r_j], where 1 \\le l_j \\le r_j \\le n.You can choose some subset of the given set of segments and decrease values on each of the chosen segments by one (independently). For example, if the initial array a = [0, 0, 0, 0, 0] and the given segments are [1; 3] and [2; 4] then you can choose both of them and the array will become b = [-1, -2, -2, -1, 0].You have to choose some subset of the given segments (each segment can be chosen at most once) in such a way that if you apply this subset of segments to the array a and obtain the array b then the value \\max\\limits_{i=1}^{n}b_i - \\min\\limits_{i=1}^{n}b_i will be maximum possible.Note that you can choose the empty set.If there are multiple answers, you can print any.If you are Python programmer, consider using PyPy instead of Python when you submit your code.", "pruebas": {"caso 1": ["\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n", "Returns: \n6\n2\n1 4 \n"], "caso 2": ["\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n", "Returns: \n7\n2\n3 2 \n"], "caso 3": ["\n1 0\n1000000\n", "Returns: \n0\n0\n\n"]}, "url": "https://codeforces.com//problemset/problem/1108/E1"},
{"titulo": "ToyTrain", "categoria": ["brute force", "greedy"], "dificultad": "1800", "enunciado": "Alice received a set of Toy Train\u2122 from Bob. It consists of one train and a connected railway network of n stations, enumerated from 1 through n. The train occupies one station at a time and travels around the network of stations in a circular manner. More precisely, the immediate station that the train will visit after station i is station i+1 if 1 \\leq i < n or station 1 if i = n. It takes the train 1 second to travel to its next station as described.Bob gave Alice a fun task before he left: to deliver m candies that are initially at some stations to their independent destinations using the train. The candies are enumerated from 1 through m. Candy i (1 \\leq i \\leq m), now at station a_i, should be delivered to station b_i (a_i \\neq b_i).The blue numbers on the candies correspond to b_i values. The image corresponds to the 1-st example.The train has infinite capacity, and it is possible to load off any number of candies at a station. However, only at most one candy can be loaded from a station onto the train before it leaves the station. You can choose any candy at this station. The time it takes to move the candies is negligible.Now, Alice wonders how much time is needed for the train to deliver all candies. Your task is to find, for each station, the minimum time the train would need to deliver all the candies were it to start from there.", "pruebas": {"caso 1": ["\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n", "Returns: \n10 9 10 10 9 \n"], "caso 2": ["\n2 3\n1 2\n1 2\n1 2\n", "Returns: \n5 6 \n"]}, "url": "https://codeforces.com//problemset/problem/1129/A2"},
{"titulo": "NastyaIsBuyingLunch", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "At the big break Nastya came to the school dining room. There are n pupils in the school, numbered from 1 to n. Unfortunately, Nastya came pretty late, so that all pupils had already stood in the queue, i.e. Nastya took the last place in the queue. Of course, it's a little bit sad for Nastya, but she is not going to despond because some pupils in the queue can agree to change places with some other pupils.Formally, there are some pairs u, v such that if the pupil with number u stands directly in front of the pupil with number v, Nastya can ask them and they will change places. Nastya asks you to find the maximal number of places in queue she can move forward. ", "pruebas": {"caso 1": ["2 1", "1 2", "1 2", "Returns: 1"], "caso 2": ["3 3", "3 1 2", "1 2", "3 1", "3 2", "Returns: 2"], "caso 3": ["5 2", "3 1 5 4 2", "5 2", "5 4", "Returns: 1"]}, "url": "https://codeforces.com//problemset/problem/1136/D"},
{"titulo": "Circus", "categoria": ["brute force", "greedy", "math", "strings"], "dificultad": "1800", "enunciado": "Polycarp is a head of a circus troupe. There are n\u00a0\u2014 an even number\u00a0\u2014 artists in the troupe. It is known whether the i-th artist can perform as a clown (if yes, then c_i = 1, otherwise c_i = 0), and whether they can perform as an acrobat (if yes, then a_i = 1, otherwise a_i = 0).Split the artists into two performances in such a way that:  each artist plays in exactly one performance,  the number of artists in the two performances is equal (i.e. equal to \\frac{n}{2}),  the number of artists that can perform as clowns in the first performance is the same as the number of artists that can perform as acrobats in the second performance. ", "pruebas": {"caso 1": ["\n4\n0011\n0101\n", "Returns: \n1 4\n"], "caso 2": ["\n6\n000000\n111111\n", "Returns: \n-1\n"], "caso 3": ["\n4\n0011\n1100\n", "Returns: \n4 3\n"], "caso 4": ["\n8\n00100101\n01111100\n", "Returns: \n1 2 3 6\n"]}, "url": "https://codeforces.com//problemset/problem/1138/B"},
{"titulo": "DirtyDeedsDoneDirtCheap", "categoria": ["greedy", "sortings"], "dificultad": "1800", "enunciado": "You are given n pairs of integers (a_1, b_1), (a_2, b_2), \\ldots, (a_n, b_n). All of the integers in the pairs are distinct and are in the range from 1 to 2 \\cdot n inclusive.Let's call a sequence of integers x_1, x_2, \\ldots, x_{2k} good if either  x_1 < x_2 > x_3 < \\ldots < x_{2k-2} > x_{2k-1} < x_{2k}, or  x_1 > x_2 < x_3 > \\ldots > x_{2k-2} < x_{2k-1} > x_{2k}. You need to choose a subset of distinct indices i_1, i_2, \\ldots, i_t and their order in a way that if you write down all numbers from the pairs in a single sequence (the sequence would be a_{i_1}, b_{i_1}, a_{i_2}, b_{i_2}, \\ldots, a_{i_t}, b_{i_t}), this sequence is good.What is the largest subset of indices you can choose? You also need to construct the corresponding index sequence i_1, i_2, \\ldots, i_t.", "pruebas": {"caso 1": ["\n5\n1 7\n6 4\n2 10\n9 8\n3 5\n", "Returns: \n3\n1 5 3\n"], "caso 2": ["\n3\n5 4\n3 2\n6 1\n", "Returns: \n3\n3 2 1\n"]}, "url": "https://codeforces.com//problemset/problem/1148/D"},
{"titulo": "UglyPairs", "categoria": ["dfs and similar", "greedy", "implementation", "sortings", "strings"], "dificultad": "1800", "enunciado": "You are given a string, consisting of lowercase Latin letters.A pair of neighbouring letters in a string is considered ugly if these letters are also neighbouring in a alphabet. For example, string \"abaca\" contains ugly pairs at positions (1, 2) \u2014 \"ab\" and (2, 3) \u2014 \"ba\". Letters 'a' and 'z' aren't considered neighbouring in a alphabet.Can you rearrange the letters of a given string so that there are no ugly pairs? You can choose any order of the letters of the given string but you can't add any new letters or remove the existing ones. You can also leave the order the same.If there are multiple answers, print any of them.You also have to answer T separate queries.", "pruebas": {"caso 1": ["\n4\nabcd\ngg\ncodeforces\nabaca\n", "Returns: \ncadb\ngg\ncodfoerces\nNo answer\n"]}, "url": "https://codeforces.com//problemset/problem/1156/B"},
{"titulo": "NauuoandCards", "categoria": ["greedy", "implementation"], "dificultad": "1800", "enunciado": "Nauuo is a girl who loves playing cards.One day she was playing cards but found that the cards were mixed with some empty ones.There are n cards numbered from 1 to n, and they were mixed with another n empty cards. She piled up the 2n cards and drew n of them. The n cards in Nauuo's hands are given. The remaining n cards in the pile are also given in the order from top to bottom.In one operation she can choose a card in her hands and play it \u2014 put it at the bottom of the pile, then draw the top card from the pile.Nauuo wants to make the n numbered cards piled up in increasing order (the i-th card in the pile from top to bottom is the card i) as quickly as possible. Can you tell her the minimum number of operations?", "pruebas": {"caso 1": ["\n3\n0 2 0\n3 0 1\n", "Returns: \n2"], "caso 2": ["\n3\n0 2 0\n1 0 3\n", "Returns: \n4"], "caso 3": ["\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n", "Returns: \n18"]}, "url": "https://codeforces.com//problemset/problem/1172/A"},
{"titulo": "Recoverit!", "categoria": ["dfs and similar", "graphs", "greedy", "number theory", "sortings"], "dificultad": "1800", "enunciado": "Authors guessed an array a consisting of n integers; each integer is not less than 2 and not greater than 2 \\cdot 10^5. You don't know the array a, but you know the array b which is formed from it with the following sequence of operations: Firstly, let the array b be equal to the array a;  Secondly, for each i from 1 to n:  if a_i is a prime number, then one integer p_{a_i} is appended to array b, where p is an infinite sequence of prime numbers (2, 3, 5, \\dots);  otherwise (if a_i is not a prime number), the greatest divisor of a_i which is not equal to a_i is appended to b;   Then the obtained array of length 2n is shuffled and given to you in the input. Here p_{a_i} means the a_i-th prime number. The first prime p_1 = 2, the second one is p_2 = 3, and so on.Your task is to recover any suitable array a that forms the given array b. It is guaranteed that the answer exists (so the array b is obtained from some suitable array a). If there are multiple answers, you can print any.", "pruebas": {"caso 1": ["\n3\n3 5 2 3 2 4\n", "Returns: \n3 4 2 "], "caso 2": ["\n1\n2750131 199999\n", "Returns: \n199999 "], "caso 3": ["\n1\n3 6\n", "Returns: \n6 "]}, "url": "https://codeforces.com//problemset/problem/1176/D"},
{"titulo": "VasyaAndArray", "categoria": ["constructive algorithms", "greedy", "implementation"], "dificultad": "1800", "enunciado": "Vasya has an array a_1, a_2, \\dots, a_n.You don't know this array, but he told you m facts about this array. The i-th fact is a triple of numbers t_i, l_i and r_i (0 \\le t_i \\le 1, 1 \\le l_i < r_i \\le n) and it means: if t_i=1 then subbarray a_{l_i}, a_{l_i + 1}, \\dots, a_{r_i} is sorted in non-decreasing order;  if t_i=0 then subbarray a_{l_i}, a_{l_i + 1}, \\dots, a_{r_i} is not sorted in non-decreasing order. A subarray is not sorted if there is at least one pair of consecutive elements in this subarray such that the former is greater than the latter. For example if a = [2, 1, 1, 3, 2] then he could give you three facts: t_1=1, l_1=2, r_1=4 (the subarray [a_2, a_3, a_4] = [1, 1, 3] is sorted), t_2=0, l_2=4, r_2=5 (the subarray [a_4, a_5] = [3, 2] is not sorted), and t_3=0, l_3=3, r_3=5 (the subarray [a_3, a_5] = [1, 3, 2] is not sorted).You don't know the array a. Find any array which satisfies all the given facts.", "pruebas": {"caso 1": ["\n7 4\n1 1 3\n1 2 5\n0 5 6\n1 6 7\n", "Returns: \nYES\n1 2 2 3 5 4 4\n"], "caso 2": ["\n4 2\n1 1 4\n0 2 3\n", "Returns: \nNO\n"]}, "url": "https://codeforces.com//problemset/problem/1187/C"},
{"titulo": "OptimalSubsequences(HardVersion)", "categoria": ["data structures", "greedy"], "dificultad": "1800", "enunciado": "This is the harder version of the problem. In this version, 1 \\le n, m \\le 2\\cdot10^5. You can hack this problem if you locked it. But you can hack the previous problem only if you locked both problems.You are given a sequence of integers a=[a_1,a_2,\\dots,a_n] of length n. Its subsequence is obtained by removing zero or more elements from the sequence a (they do not necessarily go consecutively). For example, for the sequence a=[11,20,11,33,11,20,11]: [11,20,11,33,11,20,11], [11,20,11,33,11,20], [11,11,11,11], [20], [33,20] are subsequences (these are just some of the long list);  [40], [33,33], [33,20,20], [20,20,11,11] are not subsequences. Suppose that an additional non-negative integer k (1 \\le k \\le n) is given, then the subsequence is called optimal if: it has a length of k and the sum of its elements is the maximum possible among all subsequences of length k;  and among all subsequences of length k that satisfy the previous item, it is lexicographically minimal. Recall that the sequence b=[b_1, b_2, \\dots, b_k] is lexicographically smaller than the sequence c=[c_1, c_2, \\dots, c_k] if the first element (from the left) in which they differ less in the sequence b than in c. Formally: there exists t (1 \\le t \\le k) such that b_1=c_1, b_2=c_2, ..., b_{t-1}=c_{t-1} and at the same time b_t<c_t. For example: [10, 20, 20] lexicographically less than [10, 21, 1],  [7, 99, 99] is lexicographically less than [10, 21, 1],  [10, 21, 0] is lexicographically less than [10, 21, 1]. You are given a sequence of a=[a_1,a_2,\\dots,a_n] and m requests, each consisting of two numbers k_j and pos_j (1 \\le k \\le n, 1 \\le pos_j \\le k_j). For each query, print the value that is in the index pos_j of the optimal subsequence of the given sequence a for k=k_j.For example, if n=4, a=[10,20,30,20], k_j=2, then the optimal subsequence is [20,30] \u2014 it is the minimum lexicographically among all subsequences of length 2 with the maximum total sum of items. Thus, the answer to the request k_j=2, pos_j=1 is the number 20, and the answer to the request k_j=2, pos_j=2 is the number 30.", "pruebas": {"caso 1": ["\n3\n10 20 10\n6\n1 1\n2 1\n2 2\n3 1\n3 2\n3 3\n", "Returns: \n20\n10\n20\n10\n20\n10\n"], "caso 2": ["\n7\n1 2 1 3 1 2 1\n9\n2 1\n2 2\n3 1\n3 2\n3 3\n1 1\n7 1\n7 7\n7 4\n", "Returns: \n2\n3\n2\n3\n2\n3\n1\n1\n3\n"]}, "url": "https://codeforces.com//problemset/problem/1227/D2"},
{"titulo": "TooManySegments(easyversion)", "categoria": ["greedy"], "dificultad": "1800", "enunciado": "The only difference between easy and hard versions is constraints.You are given n segments on the coordinate axis OX. Segments can intersect, lie inside each other and even coincide. The i-th segment is [l_i; r_i] (l_i \\le r_i) and it covers all integer points j such that l_i \\le j \\le r_i.The integer point is called bad if it is covered by strictly more than k segments.Your task is to remove the minimum number of segments so that there are no bad points at all.", "pruebas": {"caso 1": ["\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n", "Returns: \n3\n1 4 7 \n"], "caso 2": ["\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n", "Returns: \n3\n1 2 4 \n"], "caso 3": ["\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n", "Returns: \n4\n1 3 5 6 \n"]}, "url": "https://codeforces.com//problemset/problem/1249/D1"},
{"titulo": "TooManySegments(hardversion)", "categoria": ["data structures", "greedy", "sortings"], "dificultad": "1800", "enunciado": "The only difference between easy and hard versions is constraints.You are given n segments on the coordinate axis OX. Segments can intersect, lie inside each other and even coincide. The i-th segment is [l_i; r_i] (l_i \\le r_i) and it covers all integer points j such that l_i \\le j \\le r_i.The integer point is called bad if it is covered by strictly more than k segments.Your task is to remove the minimum number of segments so that there are no bad points at all.", "pruebas": {"caso 1": ["\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n", "Returns: \n3\n4 6 7 \n"], "caso 2": ["\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n", "Returns: \n3\n1 4 5 \n"], "caso 3": ["\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n", "Returns: \n4\n1 3 5 6 \n"]}, "url": "https://codeforces.com//problemset/problem/1249/D2"},
{"titulo": "TheFeastandtheBus", "categoria": ["brute force", "constructive algorithms", "greedy", "math"], "dificultad": "1800", "enunciado": "Employees of JebTrains are on their way to celebrate the 256-th day of the year! There are n employees and k teams in JebTrains. Each employee is a member of some (exactly one) team. All teams are numbered from 1 to k. You are given an array of numbers t_1, t_2, \\dots, t_n where t_i is the i-th employee's team number.JebTrains is going to rent a single bus to get employees to the feast. The bus will take one or more rides. A bus can pick up an entire team or two entire teams. If three or more teams take a ride together they may start a new project which is considered unacceptable. It's prohibited to split a team, so all members of a team should take the same ride.It is possible to rent a bus of any capacity s. Such a bus can take up to s people on a single ride. The total cost of the rent is equal to s \\cdot r burles where r is the number of rides. Note that it's impossible to rent two or more buses.Help JebTrains to calculate the minimum cost of the rent, required to get all employees to the feast, fulfilling all the conditions above.", "pruebas": {"caso 1": ["\n6 3\n3 1 2 3 2 3\n", "Returns: \n6\n"], "caso 2": ["\n10 1\n1 1 1 1 1 1 1 1 1 1\n", "Returns: \n10\n"], "caso 3": ["\n12 4\n1 2 3 1 2 3 4 1 2 1 2 1\n", "Returns: \n12\n"]}, "url": "https://codeforces.com//problemset/problem/1250/B"},
{"titulo": "TheParade", "categoria": ["binary search", "greedy"], "dificultad": "1800", "enunciado": "The Berland Army is preparing for a large military parade. It is already decided that the soldiers participating in it will be divided into k rows, and all rows will contain the same number of soldiers.Of course, not every arrangement of soldiers into k rows is suitable. Heights of all soldiers in the same row should not differ by more than 1. The height of each soldier is an integer between 1 and n.For each possible height, you know the number of soldiers having this height. To conduct a parade, you have to choose the soldiers participating in it, and then arrange all of the chosen soldiers into k rows so that both of the following conditions are met: each row has the same number of soldiers,  no row contains a pair of soldiers such that their heights differ by 2 or more. Calculate the maximum number of soldiers who can participate in the parade.", "pruebas": {"caso 1": ["\n5\n3 4\n7 1 13\n1 1\n100\n1 3\n100\n2 1\n1000000000000 1000000000000\n4 1\n10 2 11 1\n", "Returns: \n16\n100\n99\n2000000000000\n13\n"]}, "url": "https://codeforces.com//problemset/problem/1250/J"},
{"titulo": "TwinBuildings", "categoria": ["greedy", "implementation"], "dificultad": "1800", "enunciado": "As you might already know, space has always been a problem in ICPC Jakarta. To cope with this, ICPC Jakarta is planning to build two new buildings. These buildings should have a shape of a rectangle of the same size. Now, their problem is to find land to build the buildings.There are N lands available for sale. The i^{th} land has a rectangular shape of size L_i \\times W_i. For a good feng shui, the building's side should be parallel to the land's sides.One way is to build the two buildings on two different lands, one on each land (not necessarily with the same orientation). A building of size A \\times B can be build on the i^{th} land if and only if at least one of the following is satisfied:  A \\le L_i and B \\le W_i, or  A \\le W_i and B \\le L_i.  A \\times 2 \\le L_i and B \\le W_i, or  A \\times 2 \\le W_i and B \\le L_i, or  A \\le L_i and B \\times 2 \\le W_i, or  A \\le W_i and B \\times 2 \\le L_i. Your task in this problem is to help ICPC Jakarta to figure out the largest possible buildings they can build given N available lands. Note that ICPC Jakarta has to build two buildings of A \\times B; output the largest possible for A \\times B.", "pruebas": {"caso 1": ["\n2\n5 5\n3 4\n", "Returns: \n12.5\n"], "caso 2": ["\n2\n2 5\n4 3\n", "Returns: \n8.0\n"], "caso 3": ["\n3\n10 1\n9 8\n7 6\n", "Returns: \n42.0\n"]}, "url": "https://codeforces.com//problemset/problem/1252/H"},
{"titulo": "SendBoxestoAlice(EasyVersion)", "categoria": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "dificultad": "1800", "enunciado": "This is the easier version of the problem. In this version, 1 \\le n \\le 10^5 and 0 \\le a_i \\le 1. You can hack this problem only if you solve and lock both problems.Christmas is coming, and our protagonist, Bob, is preparing a spectacular present for his long-time best friend Alice. This year, he decides to prepare n boxes of chocolate, numbered from 1 to n. Initially, the i-th box contains a_i chocolate pieces.Since Bob is a typical nice guy, he will not send Alice n empty boxes. In other words, at least one of a_1, a_2, \\ldots, a_n is positive. Since Alice dislikes coprime sets, she will be happy only if there exists some integer k > 1 such that the number of pieces in each box is divisible by k. Note that Alice won't mind if there exists some empty boxes. Charlie, Alice's boyfriend, also is Bob's second best friend, so he decides to help Bob by rearranging the chocolate pieces. In one second, Charlie can pick up a piece in box i and put it into either box i-1 or box i+1 (if such boxes exist). Of course, he wants to help his friend as quickly as possible. Therefore, he asks you to calculate the minimum number of seconds he would need to make Alice happy.", "pruebas": {"caso 1": ["\n3\n1 0 1\n", "Returns: \n2\n"], "caso 2": ["\n1\n1\n", "Returns: \n-1\n"]}, "url": "https://codeforces.com//problemset/problem/1254/B1"},
{"titulo": "JustArrangetheIcons", "categoria": ["greedy", "implementation", "math"], "dificultad": "1800", "enunciado": "BerPhone X is almost ready for release with n applications being preinstalled on the phone. A category of an application characterizes a genre or a theme of this application (like \"game\", \"business\", or \"education\"). The categories are given as integers between 1 and n, inclusive; the i-th application has category c_i. You can choose m\u00a0\u2014 the number of screens and s\u00a0\u2014 the size of each screen. You need to fit all n icons of the applications (one icon representing one application) meeting the following requirements: On each screen, all the icons must belong to applications of the same category (but different screens can contain icons of applications of the same category);  Each screen must be either completely filled with icons (the number of icons on the screen is equal to\u00a0s) or almost filled with icons (the number of icons is equal to s-1). Your task is to find the minimal possible number of screens m.", "pruebas": {"caso 1": ["\n3\n11\n1 5 1 5 1 5 1 1 1 1 5\n6\n1 2 2 2 2 1\n5\n4 3 3 1 2\n", "Returns: \n3\n3\n4\n"]}, "url": "https://codeforces.com//problemset/problem/1267/J"},
{"titulo": "PetyaandExam", "categoria": ["greedy", "sortings", "two pointers"], "dificultad": "1800", "enunciado": "Petya has come to the math exam and wants to solve as many problems as possible. He prepared and carefully studied the rules by which the exam passes.The exam consists of n problems that can be solved in T minutes. Thus, the exam begins at time 0 and ends at time T. Petya can leave the exam at any integer time from 0 to T, inclusive.All problems are divided into two types:  easy problems \u2014 Petya takes exactly a minutes to solve any easy problem;  hard problems \u2014 Petya takes exactly b minutes (b > a) to solve any hard problem. Thus, if Petya starts solving an easy problem at time x, then it will be solved at time x+a. Similarly, if at a time x Petya starts to solve a hard problem, then it will be solved at time x+b.For every problem, Petya knows if it is easy or hard. Also, for each problem is determined time t_i (0 \\le t_i \\le T) at which it will become mandatory (required). If Petya leaves the exam at time s and there is such a problem i that t_i \\le s and he didn't solve it, then he will receive 0 points for the whole exam. Otherwise (i.e if he has solved all such problems for which t_i \\le s) he will receive a number of points equal to the number of solved problems. Note that leaving at time s Petya can have both \"mandatory\" and \"non-mandatory\" problems solved.For example, if n=2, T=5, a=2, b=3, the first problem is hard and t_1=3 and the second problem is easy and t_2=2. Then: if he leaves at time s=0, then he will receive 0 points since he will not have time to solve any problems;  if he leaves at time s=1, he will receive 0 points since he will not have time to solve any problems;  if he leaves at time s=2, then he can get a 1 point by solving the problem with the number 2 (it must be solved in the range from 0 to 2);  if he leaves at time s=3, then he will receive 0 points since at this moment both problems will be mandatory, but he will not be able to solve both of them;  if he leaves at time s=4, then he will receive 0 points since at this moment both problems will be mandatory, but he will not be able to solve both of them;  if he leaves at time s=5, then he can get 2 points by solving all problems. Thus, the answer to this test is 2.Help Petya to determine the maximal number of points that he can receive, before leaving the exam.", "pruebas": {"caso 1": ["\n10\n3 5 1 3\n0 0 1\n2 1 4\n2 5 2 3\n1 0\n3 2\n1 20 2 4\n0\n16\n6 20 2 5\n1 1 0 1 0 0\n0 8 2 9 11 6\n4 16 3 6\n1 0 1 1\n8 3 5 6\n6 20 3 6\n0 1 0 0 1 0\n20 11 3 20 16 17\n7 17 1 6\n1 1 0 1 0 0 0\n1 7 0 11 10 15 10\n6 17 2 6\n0 0 1 0 0 1\n7 6 3 7 10 12\n5 17 2 5\n1 1 1 1 0\n17 11 10 6 4\n1 1 1 2\n0\n1\n", "Returns: \n3\n2\n1\n0\n1\n4\n0\n1\n2\n1\n"]}, "url": "https://codeforces.com//problemset/problem/1282/C"},
{"titulo": "ChristmasTrees", "categoria": ["graphs", "greedy", "shortest paths"], "dificultad": "1800", "enunciado": "There are n Christmas trees on an infinite number line. The i-th tree grows at the position x_i. All x_i are guaranteed to be distinct.Each integer point can be either occupied by the Christmas tree, by the human or not occupied at all. Non-integer points cannot be occupied by anything.There are m people who want to celebrate Christmas. Let y_1, y_2, \\dots, y_m be the positions of people (note that all values x_1, x_2, \\dots, x_n, y_1, y_2, \\dots, y_m should be distinct and all y_j should be integer). You want to find such an arrangement of people that the value \\sum\\limits_{j=1}^{m}\\min\\limits_{i=1}^{n}|x_i - y_j| is the minimum possible (in other words, the sum of distances to the nearest Christmas tree for all people should be minimized).In other words, let d_j be the distance from the j-th human to the nearest Christmas tree (d_j = \\min\\limits_{i=1}^{n} |y_j - x_i|). Then you need to choose such positions y_1, y_2, \\dots, y_m that \\sum\\limits_{j=1}^{m} d_j is the minimum possible.", "pruebas": {"caso 1": ["\n2 6\n1 5\n", "Returns: \n8\n-1 2 6 4 0 3 \n"], "caso 2": ["\n3 5\n0 3 1\n", "Returns: \n7\n5 -2 4 -1 2 \n"]}, "url": "https://codeforces.com//problemset/problem/1283/D"},
{"titulo": "NewYearParties", "categoria": ["dp", "greedy"], "dificultad": "1800", "enunciado": "Oh, New Year. The time to gather all your friends and reflect on the heartwarming events of the past year...n friends live in a city which can be represented as a number line. The i-th friend lives in a house with an integer coordinate x_i. The i-th friend can come celebrate the New Year to the house with coordinate x_i-1, x_i+1 or stay at x_i. Each friend is allowed to move no more than once.For all friends 1 \\le x_i \\le n holds, however, they can come to houses with coordinates 0 and n+1 (if their houses are at 1 or n, respectively).For example, let the initial positions be x = [1, 2, 4, 4]. The final ones then can be [1, 3, 3, 4], [0, 2, 3, 3], [2, 2, 5, 5], [2, 1, 3, 5] and so on. The number of occupied houses is the number of distinct positions among the final ones.So all friends choose the moves they want to perform. After that the number of occupied houses is calculated. What is the minimum and the maximum number of occupied houses can there be?", "pruebas": {"caso 1": ["\n4\n1 2 4 4\n", "Returns: \n2 4\n"], "caso 2": ["\n9\n1 1 8 8 8 4 4 4 4\n", "Returns: \n3 8\n"], "caso 3": ["\n7\n4 3 7 1 4 3 3\n", "Returns: \n3 6\n"]}, "url": "https://codeforces.com//problemset/problem/1283/E"},
{"titulo": "Garland", "categoria": ["dp", "greedy", "sortings"], "dificultad": "1800", "enunciado": "Vadim loves decorating the Christmas tree, so he got a beautiful garland as a present. It consists of n light bulbs in a single row. Each bulb has a number from 1 to n (in arbitrary order), such that all the numbers are distinct. While Vadim was solving problems, his home Carp removed some light bulbs from the garland. Now Vadim wants to put them back on.Vadim wants to put all bulb back on the garland. Vadim defines complexity of a garland to be the number of pairs of adjacent bulbs with numbers with different parity (remainder of the division by 2). For example, the complexity of 1 4 2 3 5 is 2 and the complexity of 1 3 5 7 6 4 2 is 1.No one likes complexity, so Vadim wants to minimize the number of such pairs. Find the way to put all bulbs back on the garland, such that the complexity is as small as possible.", "pruebas": {"caso 1": ["\n5\n0 5 0 2 3\n", "Returns: \n2\n"], "caso 2": ["\n7\n1 0 0 5 0 0 2\n", "Returns: \n1\n"]}, "url": "https://codeforces.com//problemset/problem/1286/A"},
{"titulo": "NumbersonTree", "categoria": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "dificultad": "1800", "enunciado": "Evlampiy was gifted a rooted tree. The vertices of the tree are numbered from 1 to n. Each of its vertices also has an integer a_i written on it. For each vertex i, Evlampiy calculated c_i\u00a0\u2014 the number of vertices j in the subtree of vertex i, such that a_j < a_i. After the new year, Evlampiy could not remember what his gift was! He remembers the tree and the values of c_i, but he completely forgot which integers a_i were written on the vertices.Help him to restore initial integers!", "pruebas": {"caso 1": ["\n3\n2 0\n0 2\n2 0\n", "Returns: \nYES\n1 2 1 "], "caso 2": ["\n5\n0 1\n1 3\n2 1\n3 0\n2 0\n", "Returns: \nYES\n2 3 2 1 2\n"]}, "url": "https://codeforces.com//problemset/problem/1286/B"},
{"titulo": "StringColoring(easyversion)", "categoria": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"], "dificultad": "1800", "enunciado": "This is an easy version of the problem. The actual problems are different, but the easy version is almost a subtask of the hard version. Note that the constraints and the output format are different.You are given a string s consisting of n lowercase Latin letters.You have to color all its characters one of the two colors (each character to exactly one color, the same letters can be colored the same or different colors, i.e. you can choose exactly one color for each index in s).After coloring, you can swap any two neighboring characters of the string that are colored different colors. You can perform such an operation arbitrary (possibly, zero) number of times.The goal is to make the string sorted, i.e. all characters should be in alphabetical order.Your task is to say if it is possible to color the given string so that after coloring it can become sorted by some sequence of swaps. Note that you have to restore only coloring, not the sequence of swaps.", "pruebas": {"caso 1": ["\n9\nabacbecfd\n", "Returns: \nYES\n001010101\n"], "caso 2": ["\n8\naaabbcbb\n", "Returns: \nYES\n01011011\n"], "caso 3": ["\n7\nabcdedc\n", "Returns: \nNO\n"], "caso 4": ["\n5\nabcde\n", "Returns: \nYES\n00000\n"]}, "url": "https://codeforces.com//problemset/problem/1296/E1"},
{"titulo": "ShortestandLongestLIS", "categoria": ["constructive algorithms", "graphs", "greedy", "two pointers"], "dificultad": "1800", "enunciado": "Gildong recently learned how to find the  (LIS) in O(n\\log{n}) time for a sequence of length n. He wants to test himself if he can implement it correctly, but he couldn't find any online judges that would do it (even though there are actually many of them). So instead he's going to make a quiz for you about making permutations of n distinct integers between 1 and n, inclusive, to test his code with your output.The quiz is as follows.Gildong provides a string of length n-1, consisting of characters '<' and '>' only. The i-th (1-indexed) character is the comparison result between the i-th element and the i+1-st element of the sequence. If the i-th character of the string is '<', then the i-th element of the sequence is less than the i+1-st element. If the i-th character of the string is '>', then the i-th element of the sequence is greater than the i+1-st element.He wants you to find two possible sequences (not necessarily distinct) consisting of n distinct integers between 1 and n, inclusive, each satisfying the comparison results, where the length of the LIS of the first sequence is minimum possible, and the length of the LIS of the second sequence is maximum possible.", "pruebas": {"caso 1": ["\n3\n3 <<\n7 >><>><\n5 >>><\n", "Returns: \n1 2 3\n1 2 3\n5 4 3 7 2 1 6\n4 3 1 7 5 2 6\n4 3 2 1 5\n5 4 2 1 3\n"]}, "url": "https://codeforces.com//problemset/problem/1304/D"},
{"titulo": "Prefix-SuffixPalindrome(Hardversion)", "categoria": ["binary search", "greedy", "hashing", "string suffix structures", "strings"], "dificultad": "1800", "enunciado": "This is the hard version of the problem. The difference is the constraint on the sum of lengths of strings and the number of test cases. You can make hacks only if you solve all versions of this task.You are given a string s, consisting of lowercase English letters. Find the longest string, t, which satisfies the following conditions:  The length of t does not exceed the length of s.  t is a palindrome.  There exists two strings a and b (possibly empty), such that t = a + b ( \"+\" represents concatenation), and a is prefix of s while b is suffix of s. ", "pruebas": {"caso 1": ["\n5\na\nabcdfdcecba\nabbaxyzyx\ncodeforces\nacbba\n", "Returns: \na\nabcdfdcba\nxyzyx\nc\nabba\n"]}, "url": "https://codeforces.com//problemset/problem/1326/D2"},
{"titulo": "Carousel", "categoria": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "dificultad": "1800", "enunciado": "The round carousel consists of n figures of animals. Figures are numbered from 1 to n in order of the carousel moving. Thus, after the n-th figure the figure with the number 1 follows. Each figure has its own type \u2014 the type of the animal corresponding to this figure (the horse, the tiger and so on). The type of animal of the i-th figure equals t_i.The example of the carousel for n=9 and t=[5, 5, 1, 15, 1, 5, 5, 1, 1]You want to color each figure in one of the colors. You think that it's boring if the carousel contains two different figures (with the distinct types of animals) going one right after another and colored in the same color.Your task is to color the figures in such a way that the number of distinct colors used is the minimum possible and there are no figures of the different types going one right after another and colored in the same color. If you use exactly k distinct colors, then the colors of figures should be denoted with integers from 1 to k.", "pruebas": {"caso 1": ["\n4\n5\n1 2 1 2 2\n6\n1 2 2 1 2 2\n5\n1 2 1 2 3\n3\n10 10 10\n", "Returns: \n2\n1 2 1 2 2\n2\n2 1 2 1 2 1\n3\n2 3 2 3 1\n1\n1 1 1 \n"]}, "url": "https://codeforces.com//problemset/problem/1328/D"},
{"titulo": "DreamoonLikesColoring", "categoria": ["constructive algorithms", "greedy", "implementation", "math"], "dificultad": "1800", "enunciado": "Dreamoon likes coloring cells very much.There is a row of n cells. Initially, all cells are empty (don't contain any color). Cells are numbered from 1 to n.You are given an integer m and m integers l_1, l_2, \\ldots, l_m (1 \\le l_i \\le n)Dreamoon will perform m operations.In i-th operation, Dreamoon will choose a number p_i from range [1, n-l_i+1] (inclusive) and will paint all cells from p_i to p_i+l_i-1 (inclusive) in i-th color. Note that cells may be colored more one than once, in this case, cell will have the color from the latest operation.Dreamoon hopes that after these m operations, all colors will appear at least once and all cells will be colored. Please help Dreamoon to choose p_i in each operation to satisfy all constraints.", "pruebas": {"caso 1": ["\n5 3\n3 2 2\n", "Returns: \n2 4 1\n"], "caso 2": ["\n10 1\n1\n", "Returns: \n-1\n"]}, "url": "https://codeforces.com//problemset/problem/1329/A"},
{"titulo": "MinimumEulerCycle", "categoria": ["constructive algorithms", "graphs", "greedy", "implementation"], "dificultad": "1800", "enunciado": "You are given a complete directed graph K_n with n vertices: each pair of vertices u \\neq v in K_n have both directed edges (u, v) and (v, u); there are no self-loops.You should find such a cycle in K_n that visits every directed edge exactly once (allowing for revisiting vertices).We can write such cycle as a list of n(n - 1) + 1 vertices v_1, v_2, v_3, \\dots, v_{n(n - 1) - 1}, v_{n(n - 1)}, v_{n(n - 1) + 1} = v_1 \u2014 a visiting order, where each (v_i, v_{i + 1}) occurs exactly once.Find the lexicographically smallest such cycle. It's not hard to prove that the cycle always exists.Since the answer can be too large print its [l, r] segment, in other words, v_l, v_{l + 1}, \\dots, v_r.", "pruebas": {"caso 1": ["\n3\n2 1 3\n3 3 6\n99995 9998900031 9998900031\n", "Returns: \n1 2 1 \n1 3 2 3 \n1 \n"]}, "url": "https://codeforces.com//problemset/problem/1334/D"},
{"titulo": "EdgeWeightAssignment", "categoria": ["bitmasks", "constructive algorithms", "dfs and similar", "greedy", "math", "trees"], "dificultad": "1800", "enunciado": "You have unweighted tree of n vertices. You have to assign a positive weight to each edge so that the following condition would hold: For every two different leaves v_{1} and v_{2} of this tree,  of weights of all edges on the simple path between v_{1} and v_{2} has to be equal to 0. Note that you can put very large positive integers (like 10^{(10^{10})}).It's guaranteed that such assignment always exists under given constraints. Now let's define f as the number of distinct weights in assignment. In this example, assignment is invalid, because bitwise XOR of all edge weights between vertex 1 and vertex 6 (3, 4, 5, 4) is not 0. What are the minimum and the maximum possible values of f for the given tree? Find and print both.", "pruebas": {"caso 1": ["\n6\n1 3\n2 3\n3 4\n4 5\n5 6\n", "Returns: \n1 4\n"], "caso 2": ["\n6\n1 3\n2 3\n3 4\n4 5\n4 6\n", "Returns: \n3 3\n"], "caso 3": ["\n7\n1 2\n2 7\n3 4\n4 7\n5 6\n6 7\n", "Returns: \n1 6\n"]}, "url": "https://codeforces.com//problemset/problem/1338/B"},
{"titulo": "TaskOnTheBoard", "categoria": ["constructive algorithms", "greedy", "implementation", "sortings"], "dificultad": "1800", "enunciado": "Polycarp wrote on the board a string s containing only lowercase Latin letters ('a'-'z'). This string is known for you and given in the input.After that, he erased some letters from the string s, and he rewrote the remaining letters in any order. As a result, he got some new string t. You have to find it with some additional information.Suppose that the string t has length m and the characters are numbered from left to right from 1 to m. You are given a sequence of m integers: b_1, b_2, \\ldots, b_m, where b_i is the sum of the distances |i-j| from the index i to all such indices j that t_j > t_i (consider that 'a'<'b'<...<'z'). In other words, to calculate b_i, Polycarp finds all such indices j that the index j contains a letter that is later in the alphabet than t_i and sums all the values |i-j|.For example, if t = \"abzb\", then: since t_1='a', all other indices contain letters which are later in the alphabet, that is: b_1=|1-2|+|1-3|+|1-4|=1+2+3=6;  since t_2='b', only the index j=3 contains the letter, which is later in the alphabet, that is: b_2=|2-3|=1;  since t_3='z', then there are no indexes j such that t_j>t_i, thus b_3=0;  since t_4='b', only the index j=3 contains the letter, which is later in the alphabet, that is: b_4=|4-3|=1. Thus, if t = \"abzb\", then b=[6,1,0,1].Given the string s and the array b, find any possible string t for which the following two requirements are fulfilled simultaneously: t is obtained from s by erasing some letters (possibly zero) and then writing the rest in any order;  the array, constructed from the string t according to the rules above, equals to the array b specified in the input data. ", "pruebas": {"caso 1": ["\n4\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n", "Returns: \naac\nb\naba\ncodeforces\n"]}, "url": "https://codeforces.com//problemset/problem/1367/D"},
{"titulo": "UncleBogdanandCountryHappiness", "categoria": ["dfs and similar", "greedy", "math", "trees"], "dificultad": "1800", "enunciado": "Uncle Bogdan is in captain Flint's crew for a long time and sometimes gets nostalgic for his homeland. Today he told you how his country introduced a happiness index.There are n cities and n\u22121 undirected roads connecting pairs of cities. Citizens of any city can reach any other city traveling by these roads. Cities are numbered from 1 to n and the city 1 is a capital. In other words, the country has a tree structure.There are m citizens living in the country. A p_i people live in the i-th city but all of them are working in the capital. At evening all citizens return to their home cities using the shortest paths. Every person has its own mood: somebody leaves his workplace in good mood but somebody are already in bad mood. Moreover any person can ruin his mood on the way to the hometown. If person is in bad mood he won't improve it.Happiness detectors are installed in each city to monitor the happiness of each person who visits the city. The detector in the i-th city calculates a happiness index h_i as the number of people in good mood minus the number of people in bad mood. Let's say for the simplicity that mood of a person doesn't change inside the city.Happiness detector is still in development, so there is a probability of a mistake in judging a person's happiness. One late evening, when all citizens successfully returned home, the government asked uncle Bogdan (the best programmer of the country) to check the correctness of the collected happiness indexes.Uncle Bogdan successfully solved the problem. Can you do the same?More formally, You need to check: \"Is it possible that, after all people return home, for each city i the happiness index will be equal exactly to h_i\".", "pruebas": {"caso 1": ["\n2\n7 4\n1 0 1 1 0 1 0\n4 0 0 -1 0 -1 0\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n5 11\n1 2 5 2 1\n-11 -2 -6 -2 -1\n1 2\n1 3\n1 4\n3 5\n", "Returns: \nYES\nYES\n"], "caso 2": ["\n2\n4 4\n1 1 1 1\n4 1 -3 -1\n1 2\n1 3\n1 4\n3 13\n3 3 7\n13 1 4\n1 2\n1 3\n", "Returns: \nNO\nNO\n"]}, "url": "https://codeforces.com//problemset/problem/1388/C"}
]