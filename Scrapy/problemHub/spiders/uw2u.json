[
{"titulo": "MyBeautifulMadness", "categoria": "[\"data structures\", \"trees\"]", "dificultad": "Dificil", "enunciado": "You are given a tree. We will consider simple paths on it. Let's denote path between vertices a and b as (a, b). Let d-neighborhood of a path be a set of vertices of the tree located at a distance \\leq d from at least one vertex of the path (for example, 0-neighborhood of a path is a path itself). Let P be a multiset of the tree paths. Initially, it is empty. You are asked to maintain the following queries: 1 u v\u00a0\u2014 add path (u, v) into P (1 \\leq u, v \\leq n).  2 u v\u00a0\u2014 delete path (u, v) from P (1 \\leq u, v \\leq n). Notice that (u, v) equals to (v, u). For example, if P = \\{(1, 2), (1, 2)\\}, than after query 2 2 1, P = \\{(1, 2)\\}.  3 d\u00a0\u2014 if intersection of all d-neighborhoods of paths from P is not empty output \"Yes\", otherwise output \"No\" (0 \\leq d \\leq n - 1). ", "pruebas": "[[\"\\n1 4\\n1 1 1\\n1 1 1\\n2 1 1\\n3 0\\n\", \"Returns: \\nYes\\n\"], [\"\\n5 3\\n1 2\\n1 3\\n3 4\\n4 5\\n1 1 2\\n1 5 5\\n3 1\\n\", \"Returns: \\nNo\\n\"], [\"\\n10 6\\n1 2\\n2 3\\n3 4\\n4 7\\n7 10\\n2 5\\n5 6\\n6 8\\n8 9\\n1 9 9\\n1 9 8\\n1 8 5\\n3 0\\n3 1\\n3 2\\n\", \"Returns: \\nNo\\nYes\\nYes\\n\"]]", "url": "https://codeforces.com//problemset/problem/1464/F"},
{"titulo": "RulerOfTheZoo", "categoria": "[\"brute force\", \"data structures\"]", "dificultad": "Dificil", "enunciado": "After realizing that Zookeeper is just a duck, the animals have overthrown Zookeeper. They now have to decide a new ruler among themselves through a fighting tournament of the following format:Initially, animal 0 is king, while everyone else queues up with animal 1 at the front of the queue and animal n-1 at the back. The animal at the front of the queue will challenge the king to a fight, and the animal with greater strength will win the fight. The winner will become king, while the loser joins the back of the queue.An animal who wins 3 times consecutively will be crowned ruler for the whole zoo. The strength of each animal depends on how many consecutive fights he won. Animal i has strength A_i with 0 consecutive win, B_i with 1 consecutive win, and C_i with 2 consecutive wins. Initially, everyone has 0 consecutive win.For all animals, A_i > B_i and C_i > B_i. Also, the values of A_i, B_i, C_i are distinct (all 3n values are pairwise different). In other words, an animal who is not a king has strength A_i. A king usually has a strength of B_i or C_i. The exception is on the first turn, the first king (animal 0) has strength A_i.Who is the new ruler, and after how many fights? Or will it end up that animals fight forever with no one ending up as ruler?", "pruebas": "[[\"\\n4\\n5 1 2\\n10 8 11\\n9 0 3\\n7 4 6\\n\", \"Returns: \\n-1 -1\"], [\"\\n5\\n11 7 12\\n8 6 14\\n2 1 10\\n13 0 9\\n5 3 4\\n\", \"Returns: \\n1 7\\n\"]]", "url": "https://codeforces.com//problemset/problem/1491/I"},
{"titulo": "BalancetheCards", "categoria": "[\"constructive algorithms\", \"data structures\", \"divide and conquer\", \"geometry\", \"graphs\", \"implementation\"]", "dificultad": "Dificil", "enunciado": "A balanced bracket sequence is defined as an integer sequence that can be built with the following rules: The empty sequence is balanced.  If [a_1,\\ldots,a_n] and [b_1,\\ldots, b_m] are balanced, then their concatenation [a_1,\\ldots,a_n,b_1,\\ldots,b_m] is balanced.  If x is a positive integer and [a_1,\\ldots,a_n] is balanced, then [x,a_1,\\ldots,a_n,-x] is balanced. The positive numbers can be imagined as opening brackets and the negative numbers as closing brackets, where matching brackets must have the same type (absolute value). For example, [1, 2, -2, -1] and [1, 3, -3, 2, -2, -1] are balanced, but [1, 2, -1, -2] and [-1, 1] are not balanced.There are 2n cards. Each card has a number on the front and a number on the back. Each integer 1,-1,2,-2,\\ldots,n,-n appears exactly once on the front of some card and exactly once on the back of some (not necessarily the same) card.You can reorder the cards however you like. You are not allowed to flip cards, so numbers cannot move between the front and back. Your task is to order the cards so that the sequences given by the front numbers and the back numbers are both balanced, or report that it is impossible.", "pruebas": "[[\"\\n5\\n1 3\\n-3 -5\\n4 -3\\n2 2\\n-1 -4\\n-2 5\\n3 -1\\n5 1\\n-4 4\\n-5 -2\\n\", \"Returns: \\nYES\\n1 3\\n4 -3\\n-4 4\\n-1 -4\\n5 1\\n3 -1\\n2 2\\n-2 5\\n-3 -5\\n-5 -2\\n\"], [\"\\n2\\n1 1\\n-1 2\\n2 -1\\n-2 -2\\n\", \"Returns: \\nNO\\n\"]]", "url": "https://codeforces.com//problemset/problem/1503/F"},
{"titulo": "OptimalEncoding", "categoria": "[\"brute force\", \"data structures\"]", "dificultad": "Dificil", "enunciado": "Touko's favorite sequence of numbers is a permutation a_1, a_2, \\dots, a_n of 1, 2, \\dots, n, and she wants some collection of permutations that are similar to her favorite permutation.She has a collection of q intervals of the form [l_i, r_i] with 1 \\le l_i \\le r_i \\le n. To create permutations that are similar to her favorite permutation, she coined the following definition: A permutation b_1, b_2, \\dots, b_n allows an interval [l', r'] to holds its shape if for any pair of integers (x, y) such that l' \\le x < y \\le r', we have b_x < b_y if and only if a_x < a_y.  A permutation b_1, b_2, \\dots, b_n is k-similar if b allows all intervals [l_i, r_i] for all 1 \\le i \\le k to hold their shapes. Yuu wants to figure out all k-similar permutations for Touko, but it turns out this is a very hard task; instead, Yuu will encode the set of all k-similar permutations with directed acylic graphs (DAG). Yuu also coined the following definitions for herself: A permutation b_1, b_2, \\dots, b_n satisfies a DAG G' if for all edge u \\to v in G', we must have b_u < b_v.  A k-encoding is a DAG G_k on the set of vertices 1, 2, \\dots, n such that a permutation b_1, b_2, \\dots, b_n satisfies G_k if and only if b is k-similar. Since Yuu is free today, she wants to figure out the minimum number of edges among all k-encodings for each k from 1 to q.", "pruebas": "[[\"\\n4 3\\n2 4 1 3\\n1 3\\n2 4\\n1 4\\n\", \"Returns: \\n2\\n4\\n3\\n\"], [\"\\n8 4\\n3 7 4 8 1 5 2 6\\n3 6\\n1 6\\n3 8\\n1 8\\n\", \"Returns: \\n3\\n5\\n9\\n7\\n\"], [\"\\n10 10\\n10 5 1 2 7 3 9 4 6 8\\n2 2\\n4 5\\n6 8\\n4 10\\n4 4\\n2 7\\n2 2\\n7 8\\n3 7\\n2 10\\n\", \"Returns: \\n0\\n1\\n3\\n6\\n6\\n9\\n9\\n9\\n9\\n8\\n\"]]", "url": "https://codeforces.com//problemset/problem/1508/F"},
{"titulo": "PhoenixandBits", "categoria": "[\"bitmasks\", \"brute force\", \"data structures\", \"sortings\"]", "dificultad": "Dificil", "enunciado": "Phoenix loves playing with bits\u00a0\u2014 specifically, by using the bitwise operations AND, OR, and XOR. He has n integers a_1, a_2, \\dots, a_n, and will perform q of the following queries: replace all numbers a_i where l \\le a_i \\le r with a_i AND x;  replace all numbers a_i where l \\le a_i \\le r with a_i OR x;  replace all numbers a_i where l \\le a_i \\le r with a_i XOR x;  output how many distinct integers a_i where l \\le a_i \\le r. For each query, Phoenix is given l, r, and x. Note that he is considering the values of the numbers, not their indices.", "pruebas": "[[\"\\n5 6\\n5 4 3 2 1\\n1 2 3 2\\n4 2 5\\n3 2 5 3\\n4 1 6\\n2 1 1 8\\n4 8 10\\n\", \"Returns: \\n3\\n2\\n1\\n\"], [\"\\n6 7\\n6 0 2 3 2 7\\n1 0 4 3\\n2 6 8 4\\n4 0 7\\n3 2 5 3\\n1 0 1 2\\n4 0 3\\n4 2 7\\n\", \"Returns: \\n5\\n1\\n2\\n\"]]", "url": "https://codeforces.com//problemset/problem/1515/H"},
{"titulo": "HoppingAroundtheArray", "categoria": "[\"data structures\", \"dp\"]", "dificultad": "Dificil", "enunciado": "William really wants to get a pet. Since his childhood he dreamt about getting a pet grasshopper. William is being very responsible about choosing his pet, so he wants to set up a trial for the grasshopper!The trial takes place on an array a of length n, which defines lengths of hops for each of n cells. A grasshopper can hop around the sells according to the following rule: from a cell with index i it can jump to any cell with indices from i to i+a_i inclusive.Let's call the k-grasshopper value of some array the smallest number of hops it would take a grasshopper to hop from the first cell to the last, but before starting you can select no more than k cells and remove them from the array. When a cell is removed all other cells are renumbered but the values of a_i for each cell remains the same. During this the first and the last cells may not be removed.It is required to process q queries of the following format: you are given three numbers l, r, k. You are required to find the k-grasshopper value for an array, which is a subarray of the array a with elements from l to r inclusive.", "pruebas": "[[\"\\n9 5\\n1 1 2 1 3 1 2 1 1\\n1 1 0\\n2 5 1\\n5 9 1\\n2 8 2\\n1 9 4\\n\", \"Returns: \\n0\\n2\\n1\\n2\\n2\\n\"]]", "url": "https://codeforces.com//problemset/problem/1523/H"},
{"titulo": "Beautifulfountainsrows", "categoria": "[\"data structures\"]", "dificultad": "Dificil", "enunciado": "Butler Ostin wants to show Arkady that rows of odd number of fountains are beautiful, while rows of even number of fountains are not.The butler wants to show Arkady  gardens. Each garden is a row of  cells, the -th garden has one fountain in each of the cells between  and  inclusive, and there are no more fountains in that garden. The issue is that some of the gardens contain even number of fountains, it is wrong to show them to Arkady.Ostin wants to choose two integers \u2009\u2264\u2009 and show only part of each of the gardens that starts at cell  and ends at cell . Of course, only such segments suit Ostin that each garden has either zero or odd number of fountains on this segment. Also, it is necessary that at least one garden has at least one fountain on the segment from  to .Help Ostin to find the total length of all such segments, i.e. sum up the value (\u2009-\u2009\u2009+\u20091) for each suitable pair (,\u2009).", "pruebas": "[[\"1 5\", \"2 4\", \"Returns: 23\"], [\"3 6\", \"2 4\", \"3 6\", \"4 4\", \"Returns: 19\"]]", "url": "https://codeforces.com//problemset/problem/799/F"},
{"titulo": "Cutthepie", "categoria": "[\"binary search\", \"data structures\", \"geometry\"]", "dificultad": "Dificil", "enunciado": "Arkady reached the -th level in Township game, so Masha decided to bake a pie for him! Of course, the pie has a shape of convex -gon, i.e. a polygon with  vertices.Arkady decided to cut the pie in two equal in area parts by cutting it by a straight line, so that he can eat one of them and give the other to Masha. There is a difficulty because Arkady has already put a knife at some point of the pie, so he now has to cut the pie by a straight line passing trough this point.Help Arkady: find a line that passes through the point Arkady has put a knife into and cuts the pie into two parts of equal area, or determine that it's impossible. Your program has to quickly answer many queries with the same pie, but different points in which Arkady puts a knife.", "pruebas": "[[\"3 1\", \"0 0\", \"0 3\", \"3 0\", \"1 1\", \"Returns: 2.67794504460098710000\"], [\"5 3\", \"6 5\", \"6 3\", \"5 0\", \"0 0\", \"0 5\", \"5 4\", \"3 3\", \"5 2\", \"Returns: 0.60228734612690049000\"]]", "url": "https://codeforces.com//problemset/problem/799/G"},
{"titulo": "IntervalsofIntervals", "categoria": "[\"binary search\", \"data structures\", \"two pointers\"]", "dificultad": "Dificil", "enunciado": "Little D is a friend of Little C who loves intervals very much instead of number \"3\".Now he has n intervals on the number axis, the i-th of which is [a_i,b_i].Only the n intervals can not satisfy him. He defines the value of an interval of intervals [l,r] (1 \\leq l \\leq r \\leq n, l and r are both integers) as the total length of the union of intervals from the l-th to the r-th.He wants to select exactly k different intervals of intervals such that the sum of their values is maximal. Please help him calculate the maximal sum.", "pruebas": "[[\"2 1\", \"1 3\", \"2 4\", \"Returns: 3\"], [\"3 3\", \"1 4\", \"5 7\", \"3 6\", \"Returns: 15\"]]", "url": "https://codeforces.com//problemset/problem/1034/D"},
{"titulo": "SpeckledBand", "categoria": "[\"data structures\", \"divide and conquer\", \"hashing\", \"string suffix structures\", \"strings\"]", "dificultad": "Dificil", "enunciado": "Ildar took a band (a thin strip of cloth) and colored it. Formally, the band has n cells, each of them is colored into one of 26 colors, so we can denote each color with one of the lowercase letters of English alphabet. Ildar decided to take some segment of the band [l, r] (1 \\le l \\le r \\le n) he likes and cut it from the band. So he will create a new band that can be represented as a string t = s_l s_{l+1} \\ldots s_r.After that Ildar will play the following game: he cuts the band t into some new bands and counts the number of different bands among them. Formally, Ildar chooses 1 \\le k \\le |t| indexes 1 \\le i_1 < i_2 < \\ldots < i_k = |t| and cuts t to k bands-strings t_1 t_2 \\ldots t_{i_1}, t_{i_1 + 1} \\ldots t_{i_2}, \\ldots, {t_{i_{k-1} + 1}} \\ldots t_{i_k} and counts the number of different bands among them. He wants to know the minimal possible number of different bands he can get under the constraint that at least one band repeats at least two times. The result of the game is this number. If it is impossible to cut t in such a way, the result of the game is -1.Unfortunately Ildar hasn't yet decided which segment he likes, but he has q segments-candidates [l_1, r_1], [l_2, r_2], ..., [l_q, r_q]. Your task is to calculate the result of the game for each of them.", "pruebas": "[[\"9\", \"abcabcdce\", \"7\", \"1 6\", \"4 7\", \"5 9\", \"6 9\", \"1 9\", \"3 6\", \"4 4\", \"Returns: 1\"]]", "url": "https://codeforces.com//problemset/problem/1043/G"},
{"titulo": "PalindromicMagic", "categoria": "[\"data structures\", \"hashing\", \"strings\"]", "dificultad": "Dificil", "enunciado": "After learning some fancy algorithms about palindromes, Chouti found palindromes very interesting, so he wants to challenge you with this problem.Chouti has got two strings A and B. Since he likes , he would like to pick a as some non-empty palindromic substring of A and b as some non-empty palindromic substring of B. Concatenating them, he will get string ab.Chouti thinks strings he could get this way are interesting, so he wants to know how many different strings he can get.", "pruebas": "[[\"aa\", \"aba\", \"Returns: 6\"], [\"aaba\", \"abaa\", \"Returns: 15\"]]", "url": "https://codeforces.com//problemset/problem/1081/H"},
{"titulo": "TheFairNut'sgettingcrazy", "categoria": "[\"data structures\", \"implementation\"]", "dificultad": "Dificil", "enunciado": "The Fair Nut has found an array a of n integers. We call subarray l \\ldots r a sequence of consecutive elements of an array with indexes from l to r, i.e. a_l, a_{l+1}, a_{l+2}, \\ldots, a_{r-1}, a_{r}. No one knows the reason, but he calls a pair of subsegments good if and only if the following conditions are satisfied: These subsegments should not be nested. That is, each of the subsegments should contain an element (as an index) that does not belong to another subsegment. Subsegments intersect and each element that belongs to the intersection belongs each of segments only once.For example a=[1, 2, 3, 5, 5]. Pairs (1 \\ldots 3; 2 \\ldots 5) and (1 \\ldots 2; 2 \\ldots 3))\u00a0\u2014 are good, but (1 \\dots 3; 2 \\ldots 3) and (3 \\ldots 4; 4 \\ldots 5)\u00a0\u2014 are not (subsegment 1 \\ldots 3 contains subsegment 2 \\ldots 3, integer 5 belongs both segments, but occurs twice in subsegment 4 \\ldots 5).Help the Fair Nut to find out the number of pairs of good subsegments! The answer can be rather big so print it modulo 10^9+7.", "pruebas": "[[\"3\", \"1 2 3\", \"Returns: 1\"], [\"5\", \"1 2 1 2 3\", \"Returns: 4\"]]", "url": "https://codeforces.com//problemset/problem/1083/D"},
{"titulo": "HolyDiver", "categoria": "[\"data structures\"]", "dificultad": "Dificil", "enunciado": "You are given an array which is initially empty. You need to perform n operations of the given format:  \"a l r k\": append a to the end of the array. After that count the number of integer pairs x, y such that l \\leq x \\leq y \\leq r and \\operatorname{mex}(a_{x}, a_{x+1}, \\ldots, a_{y}) = k. The elements of the array are numerated from 1 in the order they are added to the array.To make this problem more tricky we don't say your real parameters of the queries. Instead your are given a', l', r', k'. To get a, l, r, k on the i-th operation you need to perform the following:  a := (a' + lans) \\bmod(n + 1),  l := (l' + lans) \\bmod{i} + 1,  r := (r' + lans) \\bmod{i} + 1,  if l > r swap l and r,  k := (k' + lans) \\bmod(n + 1), The \\operatorname{mex}(S), where S is a multiset of non-negative integers, is the smallest non-negative integer which does not appear in the set. For example, \\operatorname{mex}(\\{2, 2, 3\\}) = 0 and \\operatorname{mex} (\\{0, 1, 4, 1, 6\\}) = 2. ", "pruebas": "[[\"\\n5\\n0 0 0 1\\n0 1 0 5\\n5 2 1 0\\n5 2 1 0\\n2 4 3 3\\n\", \"Returns: \\n1\\n1\\n2\\n6\\n3\\n\"], [\"\\n5\\n2 0 0 2\\n2 0 1 1\\n0 0 2 0\\n3 2 2 0\\n0 2 3 0\\n\", \"Returns: \\n0\\n0\\n3\\n0\\n0\\n\"]]", "url": "https://codeforces.com//problemset/problem/1148/H"},
{"titulo": "RedBlueTree", "categoria": "[\"data structures\", \"implementation\", \"trees\"]", "dificultad": "Dificil", "enunciado": "You are given a tree of n nodes. The tree is rooted at node 1, which is not considered as a leaf regardless of its degree.Each leaf of the tree has one of the two colors: red or blue. Leaf node v initially has color s_{v}.The color of each of the internal nodes (including the root) is determined as follows.  Let b be the number of blue immediate children, and r be the number of red immediate children of a given vertex.  Then the color of this vertex is blue if and only if b - r \\ge k, otherwise red. Integer k is a parameter that is same for all the nodes.You need to handle the following types of queries:  1 v: print the color of node v;  2 v c: change the color of leaf v to c (c = 0 means red, c = 1 means blue);  3 h: update the current value of k to h. ", "pruebas": "[[\"\\n5 2\\n1 2\\n1 3\\n2 4\\n2 5\\n-1 -1 0 1 0\\n9\\n1 1\\n1 2\\n3 -2\\n1 1\\n1 2\\n3 1\\n2 5 1\\n1 1\\n1 2\\n\", \"Returns: \\n0\\n0\\n1\\n1\\n0\\n1\\n\"]]", "url": "https://codeforces.com//problemset/problem/1208/H"},
{"titulo": "BalancedDistribution", "categoria": "[\"data structures\", \"dp\", \"greedy\"]", "dificultad": "Dificil", "enunciado": "There are n friends living on a circular street. The friends and their houses are numbered clockwise from 0 to n-1.Initially person i has a_i stones. The friends want to make the distribution of stones among them perfectly balanced: everyone should possess the same number of stones.The only way to change the distribution of stones is by conducting meetings. During a meeting, people from exactly k consecutive houses (remember that the street is circular) gather at the same place and bring all their stones with them. All brought stones may be redistributed among people attending the meeting arbitrarily. The total number of stones they possess before the meeting and after the meeting must stay the same. After the meeting, everyone returns to their home.Find a way to make the distribution of stones perfectly balanced conducting as few meetings as possible.", "pruebas": "[[\"\\n6 3\\n2 6 1 10 3 2\\n\", \"Returns: \\n3\\n2 7 3 4\\n5 4 4 2\\n1 4 4 4\\n\"], [\"\\n11 4\\n1 0 1 0 0 4 4 2 4 3 3\\n\", \"Returns: \\n3\\n3 2 2 2 2\\n8 2 2 2 5\\n10 2 2 2 2\\n\"]]", "url": "https://codeforces.com//problemset/problem/1237/G"},
{"titulo": "Journey", "categoria": "[\"data structures\", \"divide and conquer\", \"graphs\", \"trees\"]", "dificultad": "Dificil", "enunciado": "In the wilds far beyond lies the Land of Sacredness, which can be viewed as a tree \u00a0\u2014 connected undirected graph consisting of n nodes and n-1 edges. The nodes are numbered from 1 to n. There are m travelers attracted by its prosperity and beauty. Thereupon, they set off their journey on this land. The i-th traveler will travel along the shortest path from s_i to t_i. In doing so, they will go through all edges in the shortest path from s_i to t_i, which is unique in the tree.During their journey, the travelers will acquaint themselves with the others. Some may even become friends. To be specific, the i-th traveler and the j-th traveler will become friends if and only if there are at least k edges that both the i-th traveler and the j-th traveler will go through. Your task is to find out the number of pairs of travelers (i, j) satisfying the following conditions:  1 \\leq i < j \\leq m.  the i-th traveler and the j-th traveler will become friends. ", "pruebas": "[[\"\\n8 4 1\\n1 7\\n1 2\\n2 5\\n4 6\\n6 3\\n6 2\\n6 8\\n7 8\\n3 8\\n2 6\\n4 1\\n\", \"Returns: \\n4\"], [\"\\n10 4 2\\n3 10\\n9 3\\n4 9\\n4 6\\n8 2\\n1 7\\n2 1\\n4 5\\n6 7\\n7 1\\n8 7\\n9 2\\n10 3\\n\", \"Returns: \\n1\"], [\"\\n13 8 3\\n7 6\\n9 11\\n5 6\\n11 3\\n9 7\\n2 12\\n4 3\\n1 2\\n5 8\\n6 13\\n5 10\\n3 1\\n10 4\\n10 11\\n8 11\\n4 9\\n2 5\\n3 5\\n7 3\\n8 10\\n\", \"Returns: \\n14\"]]", "url": "https://codeforces.com//problemset/problem/1336/F"},
{"titulo": "Growingflowers", "categoria": "[\"data structures\"]", "dificultad": "Dificil", "enunciado": "Sarah has always been a lover of nature, and a couple of years ago she saved up enough money to travel the world and explore all the things built by nature over its lifetime on earth. During this time she visited some truly special places which were left untouched for centuries, from watching icebergs in freezing weather to scuba-diving in oceans and admiring the sea life, residing unseen. These experiences were enhanced with breathtaking views built by mountains over time and left there for visitors to see for years on end. Over time, all these expeditions took a toll on Sarah and culminated in her decision to settle down in the suburbs and live a quiet life. However, as Sarah's love for nature never faded, she started growing flowers in her garden in an attempt to stay connected with nature. At the beginning she planted only blue orchids, but over time she started using different flower types to add variety to her collection of flowers. This collection of flowers can be represented as an array of N flowers and the i-th of them has a type associated with it, denoted as A_i. Each resident, passing by her collection and limited by the width of his view, can only see K contiguous flowers at each moment in time. To see the whole collection, the resident will look at the first K contiguous flowers A_1, A_2, ..., A_K, then shift his view by one flower and look at the next section of K contiguous flowers A_2, A_3, ..., A_{K+1} and so on until they scan the whole collection, ending with section A_{N-K+1}, ..., A_{N-1}, A_N.Each resident determines the beautiness of a section of K flowers as the number of distinct flower types in that section. Furthermore, the beautiness of the whole collection is calculated by summing the beautiness values of each contiguous section. Formally, beautiness B_i of a section starting at the i-th position is calculated as B_i = distinct(A_i, A_{i+1}, ..., A_{i+K-1}), and beautiness of the collection B is calculated as B=B_1 + B_2 + ... + B_{N-K+1}.In addition, as Sarah wants to keep her collection of flowers have a fresh feel, she can also pick two points L and R, dispose flowers between those two points and plant new flowers, all of them being the same type.You will be given Q queries and each of those queries will be of the following two types:  You will be given three integers L, R, X describing that Sarah has planted flowers of type X between positions L and R inclusive. Formally collection is changed such that A[i]=X for all i in range [L.. R].  You will be given integer K, width of the resident's view and you have to determine the beautiness value B resident has associated with the collection For each query of second type print the result \u2013 beautiness B of the collection.", "pruebas": "[[\"\\n5 5\\n1 2 3 4 5\\n2 3\\n1 1 2 5\\n2 4\\n1 2 4 5\\n2 2\\n\", \"Returns: \\n9\\n6\\n4\\n\"]]", "url": "https://codeforces.com//problemset/problem/1423/G"},
{"titulo": "CheatandWin", "categoria": "[\"bitmasks\", \"data structures\", \"games\", \"trees\"]", "dificultad": "Dificil", "enunciado": "Let's consider a (10^9+1) \\times (10^9+1) field. The rows are numbered with integers from 0 to 10^9 and the columns are numbered with integers from 0 to 10^9. Let's define as (x, y) the cell located in the x-th row and y-th column.Let's call a cell (x, y) good if x \\& y = 0, there \\& is the  operation.Let's build a graph where vertices will be all good cells of the field and we will make an edge between all pairs of adjacent by side good cells. It can be proved that this graph will be a tree\u00a0\u2014 connected graph without cycles. Let's hang this tree on vertex (0, 0), so we will have a rooted tree with root (0, 0).Two players will play the game. Initially, some good cells are black and others are white. Each player on his turn chooses a black good cell and a subset of its ancestors (possibly empty) and inverts their colors (from white to black and vice versa). The player who can't move (because all good cells are white) loses. It can be proved that the game is always finite.Initially, all cells are white. You are given m pairs of cells. For each pair color all cells in a simple path between them as black. Note that we do not invert their colors, we paint them black.Sohrab and Mashtali are going to play this game. Sohrab is the first player and Mashtali is the second.Mashtali wants to win and decided to cheat. He can make the following operation multiple times before the game starts: choose a cell and invert colors of all vertices on the path between it and the root of the tree.Mammad who was watching them wondered: \"what is the minimum number of operations Mashtali should do to have a winning strategy?\".Find the answer to this question for the initial painting of the tree. It can be proved that at least one possible way to cheat always exists.", "pruebas": "[[\"\\n1\\n7 0 0 7\\n\", \"Returns: \\n1\\n\"], [\"\\n3\\n1 2 3 4\\n3 4 1 2\\n2 1 3 4\\n\", \"Returns: \\n3\\n\"], [\"\\n2\\n0 1 0 8\\n1 0 8 0\\n\", \"Returns: \\n0\\n\"]]", "url": "https://codeforces.com//problemset/problem/1439/E"},
{"titulo": "RangeDiameterSum", "categoria": "[\"data structures\", \"trees\"]", "dificultad": "Dificil", "enunciado": "You are given a tree with n vertices numbered 1, \\ldots, n. A tree is a connected simple graph without cycles.Let \\mathrm{dist}(u, v) be the number of edges in the unique simple path connecting vertices u and v.Let \\mathrm{diam}(l, r) = \\max \\mathrm{dist}(u, v) over all pairs u, v such that l \\leq u, v \\leq r.Compute \\sum_{1 \\leq l \\leq r \\leq n} \\mathrm{diam}(l, r).", "pruebas": "[[\"\\n4\\n1 2\\n2 4\\n3 2\\n\", \"Returns: \\n10\\n\"], [\"\\n10\\n1 8\\n2 9\\n5 6\\n4 8\\n4 2\\n7 9\\n3 6\\n10 4\\n3 9\\n\", \"Returns: \\n224\\n\"]]", "url": "https://codeforces.com//problemset/problem/1458/F"}
]